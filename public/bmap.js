var e=require("@ts-bitcoin/core"),r=require("buffer"),t=require("node-fetch"),n=require("crypto"),i=require("@msgpack/msgpack"),s=require("@moneybutton/paymail-client"),o=require("dns");function a(e,r,t,n){Object.defineProperty(e,r,{get:t,set:n,enumerable:!0,configurable:!0})}function c(e){return e&&e.__esModule?e.default:e}a(module.exports,"BMAP",(()=>C)),a(module.exports,"TransformTx",(()=>z));const f=(e,r)=>{if(!e)throw new Error(`cannot get cell value of: ${e}`);return"string"===r?e.s?e.s:e.ls||"":"hex"===r?e.h?e.h:e.lh||"":"number"===r?parseInt(e.h?e.h:e.lh||"0",16):"file"===r?`bitfs://${e.f?e.f:e.lf}`:(e.b?e.b:e.lb)||""},l=function(e){return e.cell[0]&&e.cell[1]&&0===e.cell[0].op&&e.cell[1].op&&106===e.cell[1].op||106===e.cell[0].op},u=(e,r,t)=>{if(e[r]){if(!Array.isArray(e[r])){const t=e[r];e[r]=[],e[r][0]=t}e[r][e[r].length]=t}else e[r]=[t]},d=function(e,r,t,n,i,s){const o={},a=r.length+1;if(n.length<a)throw new Error(`${e} requires at least ${a} fields including the prefix: ${s.tx.h}`);for(const[e,t]of Object.entries(r)){const r=parseInt(e,10),[i]=Object.keys(t),[s]=Object.values(t);o[i]=f(n[r+1],s)}u(t,e,o)},h=async e=>{const t=await(n.webcrypto||window.crypto).subtle.digest("SHA-256",e);return r.Buffer.from(t)},g="15PciHG22SNLQJXMoSUaWVi7WSqc7hCfva",p=[{algorithm:"string"},{address:"string"},{signature:"binary"},[{index:"binary"}]],y=async function(e){let n=r.Buffer.from("");try{const r=await c(t)(`https://x.bitfs.network/${e}`,{});n=await r.buffer()}catch(e){console.error(e)}return n},m=async function(t,n,i,s,o,a){const c={};if(s.length<4)throw new Error("AIP requires at least 4 fields including the prefix "+a);for(const[e,r]of Object.entries(t)){const t=parseInt(e,10);let n,i;if(r instanceof Array){n=r[0].index,[i]=Object.keys(r[0]);const e=[];for(let r=t+1;r<s.length;r++)s[r].h&&Array.isArray(e)&&e.push(parseInt(s[r].h||"",16));c[i]=e}else[i]=Object.keys(r),[n]=Object.values(r),c[i]=f(s[t+1],n)||""}var d;if(s[0].s===g&&s[3].s&&(d=s[3].s,new RegExp("^(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+/]{3}=)?$","gi").test(d))&&(c.signature=s[3].s),!c.signature)throw new Error("AIP requires a signature "+a);await async function(t,n,i){if(!Array.isArray(i)||i.length<3)throw new Error("AIP requires at least 3 cells including the prefix");let s=-1;if(i.forEach(((e,r)=>{e.cell===n&&(s=r)})),-1===s)throw new Error("AIP could not find cell in tape");let o=t.index||[];const a=["6a"];for(let e=0;e<s;e++){const t=i[e];if(!l(t)){for(let e=0;e<t.cell.length;e++){const n=t.cell[e];if(n.h)a.push(n.h);else if(n.f){const e=await y(n.f);a.push(e.toString("hex"))}else n.b?a.push(r.Buffer.from(n.b,"base64").toString("hex")):n.s&&a.push(r.Buffer.from(n.s).toString("hex"))}a.push("7c")}}if(t.hashing_algorithm&&t.index_unit_size){const e=2*t.index_unit_size;o=[];const r=n[6].h;for(let t=0;t<r.length;t+=e)o.push(parseInt(r.substr(t,e),16));t.index=o}const c=[];let f;if(o.length>0?o.forEach((e=>{c.push(r.Buffer.from(a[e],"hex"))})):a.forEach((e=>{c.push(r.Buffer.from(e,"hex"))})),t.hashing_algorithm){t.index_unit_size||c.shift();const n=e.Script.fromSafeDataArray(c);let i=r.Buffer.from(n.toHex(),"hex");t.index_unit_size&&(i=i.slice(1)),f=await h(r.Buffer.from(i.toString("hex")))}else f=r.Buffer.concat([...c]);try{t.verified=e.Bsm.verify(f,t.signature||"",e.Address.fromString(t.address||"")||e.Address.fromString(t.signing_address||""))}catch(e){t.verified=!1}if(!t.verified){f=r.Buffer.concat([...c.slice(1,c.length-1)]);const n=await h(f);f=r.Buffer.from(n.toString("hex"));try{t.verified=e.Bsm.verify(f,t.signature||"",e.Address.fromString(t.address||t.signing_address||""))}catch(e){t.verified=!1}}return t.verified||!1}(c,s,o),u(i,n,c)},w={name:"AIP",address:g,querySchema:p,handler:async({dataObj:e,cell:r,tape:t,tx:n})=>{if(!t)throw new Error("Invalid AIP transaction. tape is required");if(!n)throw new Error("Invalid AIP transaction. tx is required");return await m(p,"AIP",e,r,t,n)}},b=[{content:["string","binary","file"]},{"content-type":"string"},{encoding:"string"},{filename:"string"}],x={name:"B",address:"19HxigV4QyBv3tHpQVcUEQyq1pzZVdoAut",querySchema:b,handler:function({dataObj:e,cell:r,tx:t}){const n=new Map;if(n.set("utf8","string"),n.set("text","string"),n.set("gzip","binary"),n.set("text/plain","string"),n.set("image/png","binary"),n.set("image/jpeg","binary"),!r[1]||!r[2])throw new Error(`Invalid B tx: ${t}`);if(r.length>b.length+1)throw new Error("Invalid B tx. Too many fields.");const i={};for(const[e,t]of Object.entries(b)){const s=parseInt(e,10),o=Object.keys(t)[0];let a=Object.values(t)[0];if("content"===o)if(r[1].f)a="file";else if(r[3]&&r[3].s||!r[2].s)a=r[3]&&r[3].s?n.get(r[3].s.replace("-","").toLowerCase()):null;else{if(a=n.get(r[2].s),!a)return void console.warn("Problem inferring encoding. Malformed B data.",r);r[3]||(r[3]={h:"",b:"",s:"",i:0,ii:0}),r[3].s="string"===a?"utf-8":"binary"}if("encoding"===o&&!r[s+1])continue;if("filename"===o&&!r[s+1])continue;if(!r||!r[s+1])throw new Error("malformed B syntax "+r);const c=r[s+1];i[o]=f(c,a)}u(e,"B",i)}},E=[{type:"string"},{hash:"string"},{sequence:"string"}],A={name:"BAP",address:"1BAPSuaPnfGnSBM3GLV9yhxUdYe4vGbdMT",querySchema:E,handler:({dataObj:e,cell:r,tape:t,tx:n})=>{if(!t)throw new Error("Invalid BAP tx, tape required");if(!n)throw new Error("Invalid BAP tx, tx required");d("BAP",E,e,r,0,n)}},S=[{hashing_algorithm:"string"},{signing_algorithm:"string"},{signing_address:"string"},{signature:"string"},{index_unit_size:"number"},[{index:"binary"}]],P={name:"HAIP",address:"1HA1P2exomAwCUycZHr8WeyFoy5vuQASE3",querySchema:S,handler:async({dataObj:e,cell:r,tape:t,tx:n})=>{if(!t)throw new Error("Invalid HAIP tx. Bad tape");if(!n)throw new Error("Invalid HAIP tx.");return await m(S,"HAIP",e,r,t,n)}},v="1PuQa7K62MiKCtssSLKy1kh56WWU7MtUR5",B=[{cmd:{SET:[{key:"string"},{val:"string"}],SELECT:[{tx:"string"}],ADD:[{key:"string"},[{val:"string"}]],DELETE:[{key:"string"},[{val:"string"}]],JSON:"string",REMOVE:[[{key:"string"}]],CLEAR:[[{txid:"string"}]]}}],M={name:"MAP",address:v,querySchema:B,handler:function({dataObj:e,cell:t,tx:n}){if(!(t[0].s===v&&t[1]&&t[1].s&&t[2]&&t[2].s))throw new Error(`Invalid MAP record: ${n}`);let s={};const o=[];let a=0;for(let e=1;e<t.length;e++)":::"===t[e].s?a++:(o[a]||(o[a]=[]),t[e].i=o[a].length+1,o[a].push(t[e]));const c=Object.keys(B[0])[0];s[c]=o[0][0].s,o.forEach((e=>{e.unshift({s:v,i:0});switch(e[1].s){case"ADD":!function(e,r){let t=null;for(const n of e){if(0===n.i||1===n.i)continue;const e=n.s;2===n.i?(r[e]=[],t=e):t&&Array.isArray(r[t])&&r[t].push(e)}}(e,s);break;case"REMOVE":s.key=e[2].s;break;case"DELETE":!function(e,r){let t=null;for(const n of e){if(0===n.i||1===n.i)continue;const e=n.s;2===n.i?(r[e]=[],t=e):t&&r[t].push(e)}}(e,s);break;case"CLEAR":break;case"SELECT":!function(e,r){for(const t of e)if(0===t.i||1===t.i){r.SELECT="TODO";continue}}(e,s);break;case"MSGPACK":s=function(e,t){for(const n of e)if(0!==n.i&&1!==n.i&&2===n.i)try{if(!i.decode)throw new Error("Msgpack is required but not loaded");const e=r.Buffer.from(n.b,"base64");t=(0,i.decode)(e)}catch(e){t={}}return t}(e,s);break;case"JSON":s=function(e,r){for(const t of e)if(0!==t.i&&1!==t.i&&2===t.i)try{r=JSON.parse(t.s)}catch(e){r={}}return r}(e,s);break;case"SET":!function(e,r){let t=null;for(const n of e){if(!n.s||0===n.i||1===n.i)continue;const e=n.s;if(n.i%2==0)r[e]="",t=e;else{if(!t)throw new Error(`malformed MAP syntax. Cannot parse.${t}`);r[t]=e}}}(e,s)}})),u(e,"MAP",s)}},O=async function(e,t){const n=r.Buffer.from(e+t);return(await h(n)).toString("hex")},k={name:"METANET",address:"meta",querySchema:[{address:"string"},{parent:"string"},{name:"string"}],handler:async({dataObj:e,cell:r,tx:t})=>{if(!(r.length&&"meta"===r[0].s&&r[1]&&r[1].s&&r[2]&&r[2].s&&t))throw new Error("Invalid Metanet tx "+t);const n=await O(r[1].s,t.tx.h),i={a:r[1].s,tx:t.tx.h,id:n};let s={};if(t.in){const e=await O(t.in[0].e.a,r[2].s);s={a:t.in[0].e.a,tx:r[2].s,id:e}}e.METANET||(e.METANET=[]),e.METANET.push({node:i,parent:s})}},q=async function(e,r){return new(0,s.PaymailClient)(c(o),c(t)).verifyPubkeyOwner(r,e)},I="1signyCizp1VyBsJ5Ss2tEAgw7zCYNJu4",T={name:"PSP",address:I,querySchema:[{signature:"string"},{pubkey:"string"},{paymail:"string"}],handler:async function({dataObj:t,cell:n,tape:i}){if(!(n.length&&n[0].s===I&&n[1]&&n[2]&&n[3]&&n[1].b&&n[2].s&&n[3].s&&i))throw new Error("Invalid Paymail Signature Protocol record");const s={signature:n[1].s,pubkey:n[2].s,paymail:n[3].s,verified:!1};!function(t,n,i){if(!Array.isArray(i)||i.length<3)throw new Error("PSP requires at least 3 cells including the prefix");let s=-1;if(i.forEach(((e,r)=>{e.cell===n&&(s=r)})),-1===s)throw new Error("PSP could not find cell in tape");const o=[];for(let e=0;e<s;e++){const t=i[e];l(t)||(t.cell.forEach((e=>{let t=e.h;t||(t=r.Buffer.from(e.b,"base64").toString("hex")),t||(t=r.Buffer.from(e.s).toString("hex")),o.push(r.Buffer.from(t,"hex"))})),o.push(r.Buffer.from("7c","hex")))}const a=e.Script.fromSafeDataArray(o),c=r.Buffer.from(a.toHex(),"hex"),f=e.PubKey.fromString(t.pubkey),u=e.Address.fromPubKey(f);try{t.verified=e.Bsm.verify(c,t.signature,u)}catch(e){t.verified=!1}t.verified}(s,n,i);const o=await q(s.paymail,s.pubkey);s.verified=s.verified&&o,u(t,"PSP",s)}},j=new Map([]),_=new Map,H=new Map;[w,x,A,P,M,k,T].forEach((e=>{j.set(e.address,e.name),_.set(e.name,e.handler),H.set(e.name,e.querySchema)}));class C{constructor(){this.protocolMap=j,this.protocolHandlers=_,this.protocolQuerySchemas=H}addProtocolHandler(e){const{name:r,address:t,querySchema:n,handler:i}=e;this.protocolMap.set(t,r),this.protocolHandlers.set(r,i),this.protocolQuerySchemas.set(r,n)}transformTx=async e=>{const r=this;if(!e||!e.in||!e.out)throw new Error("Cannot process tx");const t={in:[],out:[],_id:"",tx:{},blk:{}};for(const[n,i]of Object.entries(e))if("out"===n)for(const i of e.out){const{tape:s}=i;if(null==s?void 0:s.some((e=>l(e))))for(const n of s){if(l(n))continue;const{cell:i}=n;if(!i)throw new Error("empty cell while parsing");const o=i[0].s,a=r.protocolMap.get(o)||o;if(r.protocolHandlers.has(a)&&"function"==typeof r.protocolHandlers.get(a)){const n=r.protocolHandlers.get(a);n&&await n({dataObj:t,cell:i,tape:s,tx:e})}else u(t,a,i)}else n&&!t[n]&&(t[n]=[]),t[n].push({i:i.i,e:i.e})}else"in"===n?t[n]=i.map((e=>{const r={...e};return delete r.tape,r})):Object.keys(t).includes(n)?t[n]=i:t[n]||(t[n]=[],t[n].push(i));if(t.METANET&&e.parent){const r={ancestor:e.ancestor,parent:e.parent,child:e.child,head:e.head};t.METANET.push(r),delete t.ancestor,delete t.child,delete t.parent,delete t.head,delete t.node}return t}}const z=async e=>(new C).transformTx(e);
//# sourceMappingURL=bmap.js.map
