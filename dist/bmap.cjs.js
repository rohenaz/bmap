"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const we=require("bpu-ts"),u=require("@bsv/sdk"),_=require("@msgpack/msgpack"),Se=t=>t.length>0&&t.every(e=>typeof e=="string"),Ee=t=>t.length>0&&t.every(e=>e==="object"),w=(t,e)=>{if(!t)throw new Error(`cannot get cell value of: ${t}`);return e==="string"?t.s?t.s:t.ls||"":e==="hex"?t.h?t.h:t.lh||(t.b?Buffer.from(t.b,"base64").toString("hex"):t.lb&&Buffer.from(t.lb,"base64").toString("hex"))||"":e==="number"?Number.parseInt(t.h?t.h:t.lh||"0",16):e==="file"?`bitfs://${t.f?t.f:t.lf}`:e==="binary"?t.b||t.lb||"":(t.b?t.b:t.lb)||""},Pe=t=>t.cell.some(e=>e.op===106),z=t=>{var r;if(t.cell.length!==2)return!1;const e=t.cell.findIndex(n=>n.op===106);return e!==-1?((r=t.cell[e-1])==null?void 0:r.op)===0:!1},y=(t,e,r)=>{if(!t[e])t[e]=[r];else{if(!Array.isArray(t[e])){const n=t[e];t[e]=[],t[e][0]=n}t[e].push(r)}},xe=(t,e,r,n,s)=>{const o={},a=e.length+1;if(n.length<a)throw new Error(`${t} requires at least ${a} fields including the prefix: ${s.tx.h}`);for(const[i,h]of Object.entries(e)){const c=Number.parseInt(i,10),[d]=Object.keys(h),[g]=Object.values(h);o[d]=w(n[c+1],g)}y(r,t,o)},ve=t=>{const e="(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+/]{3}=)?";return new RegExp(`^${e}$`,"gi").test(t)},N="OP_SIZE <OP_X_PLACEHOLDER> OP_PICK OP_SHA256 OP_SWAP OP_SPLIT OP_DROP OP_EQUALVERIFY OP_DROP OP_CHECKSIG".split(" "),Ae=t=>{if(t.length!==12)return!1;const e=[...t].map(s=>s.ops).splice(2,t.length),r=w(t[1],"hex"),n=Buffer.from(r).byteLength;return e[1]=`OP_${n}`,N[1]=`OP_${n}`,e.join()===N.join()},Ie=({dataObj:t,cell:e,out:r})=>{if(!e[0]||!r)throw new Error("Invalid 21e8 tx. dataObj, cell, out and tx are required.");const n=w(e[0],"hex"),s=w(e[1],"hex");if(!s)throw new Error(`Invalid 21e8 target. ${JSON.stringify(e[0],null,2)}`);const o=Buffer.from(s,"hex").byteLength,a={target:s,difficulty:o,value:r.e.v,txid:n};y(t,"21E8",a)},M={name:"21E8",handler:Ie,scriptChecker:Ae},{toArray:v,toHex:A,fromBase58Check:L,toBase58Check:K}=u.Utils,Q="15PciHG22SNLQJXMoSUaWVi7WSqc7hCfva",Y=[{algorithm:"string"},{address:"string"},{signature:"binary"},[{index:"binary"}]];function Be(t,e,r){if(!Array.isArray(r)||r.length<3)throw new Error("AIP requires at least 3 cells including the prefix");let n=-1;for(let f=0;f<r.length;f++)if(r[f].cell===e){n=f;break}if(n===-1)throw new Error("AIP could not find cell in tape");let s=t.index||[];const o=["6a"];for(let f=0;f<n;f++){const l=r[f];if(!z(l)){for(const p of l.cell)p.h?o.push(p.h):p.b?o.push(A(v(p.b,"base64"))):p.s&&o.push(A(v(p.s)));o.push("7c")}}if(t.hashing_algorithm&&t.index_unit_size){const f=t.index_unit_size*2;s=[];const l=e[6].h;for(let p=0;p<l.length;p+=f)s.push(Number.parseInt(l.substr(p,f),16));t.index=s}const a=[];if(s.length>0)for(const f of s){if(f>=o.length)return console.log("[validateSignature] Index out of bounds:",f),!1;a.push(v(o[f],"hex"))}else for(const f of o)a.push(v(f,"hex"));let i;if(t.hashing_algorithm){t.index_unit_size||a.shift();const f=u.Script.fromHex(A(a.flat()));let l=v(f.toHex(),"hex");t.index_unit_size&&(l=l.slice(1)),i=u.Hash.sha256(l)}else i=a.flat();const h=t.address||t.signing_address;if(!h||!t.signature)return!1;let c;try{c=u.Signature.fromCompact(t.signature,"base64")}catch(f){return console.log("[validateSignature] Failed to parse signature:",f),!1}const d=()=>{try{const f=u.BSM.magicHash(i),l=F(f);for(let p=0;p<4;p++)try{const b=c.RecoverPublicKey(p,l),S=b.toHash(),{prefix:E}=L(h);if(K(S,E)===h)return u.BSM.verify(i,c,b)}catch(b){console.log("[tryNormalLogic] Recovery error:",b)}}catch(f){console.log("[tryNormalLogic] error:",f)}return!1},g=()=>{if(a.length<=2)return!1;try{const f=a.slice(1,-1),l=u.Hash.sha256(f.flat()),p=A(l),b=v(p,"utf8"),S=u.BSM.magicHash(b),E=F(S);for(let P=0;P<4;P++)try{const x=c.RecoverPublicKey(P,E),k=x.toHash(),{prefix:H}=L(h);if(K(k,H)===h)return u.BSM.verify(b,c,x)}catch(x){console.log("[tryTwetchLogic] Recovery error:",x)}}catch(f){console.log("[tryTwetchLogic] error:",f)}return!1};let m=d();return m||(m=g()),t.verified=m,m}function F(t){const e=A(t);return new u.BigNumber(e,16)}var Z=(t=>(t.HAIP="HAIP",t.AIP="AIP",t))(Z||{});const J=async(t,e,r,n,s)=>{const o={};if(n.length<4)throw new Error("AIP requires at least 4 fields including the prefix");for(const[a,i]of Object.entries(t)){const h=Number.parseInt(a,10);if(Array.isArray(i)){const[c]=Object.keys(i[0]),d=[];for(let g=h+1;g<n.length;g++)n[g].h&&Array.isArray(d)&&d.push(Number.parseInt(n[g].h||"",16));o[c]=d}else{const[c]=Object.keys(i),[d]=Object.values(i);o[c]=w(n[h+1],d)||""}}if(n[0].s===Q&&n[3].s&&ve(n[3].s)&&(o.signature=n[3].s),!o.signature)throw new Error("AIP requires a signature");return Be(o,n,s),y(r,e,o),{dataObj:r,cell:n,tape:s}},ke=async({dataObj:t,cell:e,tape:r})=>{if(!r)throw new Error("Invalid AIP transaction. tape is required");return J(Y,"AIP",t,e,r)},G={name:"AIP",address:Q,opReturnSchema:Y,handler:ke},He="19HxigV4QyBv3tHpQVcUEQyq1pzZVdoAut",$=[{content:["string","binary","file"]},{"content-type":"string"},{encoding:"string"},{filename:"string"}],Re=({dataObj:t,cell:e,tx:r})=>{var o;const n=new Map;if(n.set("utf8","string"),n.set("text","string"),n.set("gzip","binary"),n.set("text/plain","string"),n.set("image/png","binary"),n.set("image/jpeg","binary"),n.set("application/octet-stream","binary"),!e[1]||!e[2])throw new Error(`Invalid B tx: ${r}`);if(e.length>$.length+1)throw new Error("Invalid B tx. Too many fields.");const s={};for(const[a,i]of Object.entries($)){const h=Number.parseInt(a,10),c=Object.keys(i)[0];let d=Object.values(i)[0];if(c==="content")if(e[1].f)d="file";else if((!e[3]||!e[3].s)&&e[2].s)d=n.get(e[2].s),d||(d="binary"),e[3]||(e[3]={h:"",b:"",s:"",i:0,ii:0}),e[3].s=d==="string"?"utf-8":"binary";else{const m=(o=e[3])!=null&&o.s?n.get(e[3].s.replace("-","").toLowerCase()):null;m?d=m:d="binary"}if(c==="encoding"&&!e[h+1]||c==="filename"&&!e[h+1])continue;if(!e||!e[h+1])throw new Error(`malformed B syntax ${e}`);const g=e[h+1];s[c]=w(g,d)}y(t,"B",s)},W={name:"B",address:He,opReturnSchema:$,handler:Re},Te="1BAPSuaPnfGnSBM3GLV9yhxUdYe4vGbdMT",D=[{type:"string"},{hash:"string"},{sequence:"string"}],Me=({dataObj:t,cell:e,tx:r})=>{if(!r)throw new Error("Invalid BAP tx, tx required");xe("BAP",D,t,e,r)},X={name:"BAP",address:Te,opReturnSchema:D,handler:Me},$e="$",Oe=[{su:[{pubkey:"string"},{sign_position:"string"},{signature:"string"}],echo:[{data:"string"},{to:"string"},{filename:"string"}],route:[[{add:[{bitcom_address:"string"},{route_matcher:"string"},{endpoint_template:"string"}]},{enable:[{path:"string"}]}]],useradd:[{address:"string"}]}],Ce=({dataObj:t,cell:e})=>{if(!e.length||!e.every(n=>n.s))throw new Error("Invalid Bitcom tx");const r=e.map(n=>n!=null&&n.s?n.s:"");y(t,"BITCOM",r)},_e={name:"BITCOM",address:$e,opReturnSchema:Oe,handler:Ce},{toArray:q,toBase58Check:T,toHex:Ne}=u.Utils,{magicHash:Le}=u.BSM,j="13SrNDkVzY5bHBRKNu5iXTQ7K7VqTh5tJC",ee=[{bitkey_signature:"string"},{user_signature:"string"},{paymail:"string"},{pubkey:"string"}];function Ke(t){const e=Ne(t);return new u.BigNumber(e,16)}function U(t,e){const r=Le(t),n=Ke(r);for(let s=0;s<4;s++)try{const o=e.RecoverPublicKey(s,n);if(u.BSM.verify(t,e,o))return o}catch{}throw new Error("Failed to recover public key from BSM signature")}const Fe=async({dataObj:t,cell:e})=>{if(e.length<5)throw new Error("Invalid Bitkey tx");const r={};for(const[H,R]of Object.entries(ee)){const me=Number.parseInt(H,10),ye=Object.keys(R)[0],be=Object.values(R)[0];r[ye]=w(e[me+1],be)}const n=r.pubkey,o=u.PublicKey.fromString(n).toHash(),a=T(o),h=Buffer.from(r.paymail).toString("hex")+n,c=Buffer.from(h,"hex"),d=u.Hash.sha256(q(c)),g=u.Signature.fromCompact(r.bitkey_signature,"base64"),m=U(d,g),f=m.toHash(),l=T(f),p=u.BSM.verify(d,g,m)&&l===j,b=q(Buffer.from(n,"utf8")),S=u.Signature.fromCompact(r.user_signature,"base64"),E=U(b,S),P=E.toHash(),x=T(P),k=u.BSM.verify(b,S,E)&&x===a;r.verified=p&&k,y(t,"BITKEY",r)},qe={name:"BITKEY",address:j,opReturnSchema:ee,handler:Fe},{magicHash:Ue}=u.BSM,{toArray:Ve}=u.Utils,te="18pAqbYqhzErT6Zk3a5dwxHtB9icv8jH2p",ze=[{paymail:"string"},{pubkey:"binary"},{signature:"string"}],Qe=async({dataObj:t,cell:e,tape:r,tx:n})=>{if(e[0].s!==te||!e[1]||!e[2]||!e[3]||!e[1].s||!e[2].b||!e[3].s||!r)throw new Error(`Invalid BITPIC record: ${n}`);const s={paymail:e[1].s,pubkey:Buffer.from(e[2].b,"base64").toString("hex"),signature:e[3].s||"",verified:!1};if(r[1].cell[0].s==="19HxigV4QyBv3tHpQVcUEQyq1pzZVdoAut")try{const a=e[1].lb||e[1].b,i=u.Hash.sha256(Ve(a,"base64")),h=u.Signature.fromCompact(s.signature,"base64"),c=u.PublicKey.fromString(s.pubkey),d=Ue(i);s.verified=u.BSM.verify(d,h,c)}catch{s.verified=!1}y(t,"BITPIC",s)},Ye={name:"BITPIC",address:te,opReturnSchema:ze,handler:Qe},Ze="1HA1P2exomAwCUycZHr8WeyFoy5vuQASE3",re=[{algorithm:"string"},{algorithm:"string"},{address:"string"},{signature:"string"},{algorithm:"string"},[{index:"binary"}]],Je=async({dataObj:t,cell:e,tape:r,tx:n})=>{if(!r)throw new Error("Invalid HAIP tx. Bad tape");if(!n)throw new Error("Invalid HAIP tx.");return await J(re,Z.HAIP,t,e,r)},Ge={name:"HAIP",address:Ze,opReturnSchema:re,handler:Je},O="1PuQa7K62MiKCtssSLKy1kh56WWU7MtUR5",ne=[{cmd:{SET:[{key:"string"},{val:"string"}],SELECT:[{tx:"string"}],ADD:[{key:"string"},[{val:"string"}]],DELETE:[{key:"string"},[{val:"string"}]],JSON:"string",REMOVE:[[{key:"string"}]],CLEAR:[[{txid:"string"}]]}}],We=(t,e)=>{let r=null;for(const n of t){if(n.i===0||n.i===1)continue;const s=n.s;n.i===2?(e[s]=[],r=s):r&&Array.isArray(e[r])&&e[r].push(s)}},De=(t,e)=>{let r=null;for(const n of t){if(n.i===0||n.i===1)continue;const s=n.s;n.i===2?(e[s]=[],r=s):r&&e[r].push(s)}},Xe=(t,e)=>{for(const r of t)(r.i===0||r.i===1)&&(e.SELECT="TODO")},je=(t,e)=>{for(const r of t)if(!(r.i===0||r.i===1)&&r.i===2)try{if(!_.decode)throw new Error("Msgpack is required but not loaded");const n=Buffer.from(r.b,"base64");e=_.decode(n)}catch{e={}}return e},et=(t,e)=>{for(const r of t)if(!(r.i===0||r.i===1)&&r.i===2)try{e=JSON.parse(r.s)}catch{e={}}return e},tt=(t,e)=>{let r=null;for(const n of t){if(!n.s||n.i===0||n.i===1)continue;const s=n.s;if(n.i%2===0)e[s]="",r=s;else{if(!r)throw new Error(`malformed MAP syntax. Cannot parse.${r}`);e[r]=s}}},rt=({dataObj:t,cell:e,tx:r})=>{if(e[0].s!==O||!e[1]||!e[1].s||!e[2]||!e[2].s)throw new Error(`Invalid MAP record: ${JSON.stringify(r,null,2).substring(0,100)}`);let n={};const s=[];let o=0;for(let i=1;i<e.length;i++)e[i].s===":::"?o++:(s[o]||(s[o]=[]),e[i].i=s[o].length+1,s[o].push(e[i]));const a=Object.keys(ne[0])[0];n[a]=s[0][0].s;for(const i of s)switch(i.unshift({s:O,i:0}),i[1].s){case"ADD":{We(i,n);break}case"REMOVE":{n.key=i[2].s;break}case"DELETE":{De(i,n);break}case"CLEAR":break;case"SELECT":{Xe(i,n);break}case"MSGPACK":{n=je(i,n);break}case"JSON":{n=et(i,n);break}case"SET":{tt(i,n);break}}y(t,"MAP",n)},se={name:"MAP",address:O,opReturnSchema:ne,handler:rt},{toArray:nt,toHex:st}=u.Utils,ot="meta",it=[{address:"string"},{parent:"string"},{name:"string"}],V=async(t,e)=>{const r=Buffer.from(t+e),n=u.Hash.sha256(nt(r));return st(n)},at=async({dataObj:t,cell:e,tx:r})=>{if(!e.length||e[0].s!=="meta"||!e[1]||!e[1].s||!e[2]||!e[2].s||!r)throw new Error(`Invalid Metanet tx ${r}`);const n=await V(e[1].s,r.tx.h),s={a:e[1].s,tx:r.tx.h,id:n};let o={a:"",tx:"",id:""};if(r.in){const a=await V(r.in[0].e.a,e[2].s);o={a:r.in[0].e.a,tx:e[2].s,id:a}}t.METANET||(t.METANET=[]),t.METANET.push({node:s,parent:o})},oe={name:"METANET",address:ot,opReturnSchema:it,handler:at},ct=t=>{if(t.length<13)return!1;const e=B(t,o=>o.ops==="OP_IF"),r=B(t,(o,a)=>a>e&&o.ops==="OP_ENDIF"),n=t.slice(e,r),s=t[e-1];return(s==null?void 0:s.op)===0&&!!n[0]&&!!n[1]&&n[1].s==="ord"},ft=({dataObj:t,cell:e,out:r})=>{if(!e[0]||!r)throw new Error("Invalid Ord tx. dataObj, cell, out and tx are required.");const n=B(e,c=>c.ops==="OP_IF"),s=B(e,(c,d)=>d>n&&c.ops==="OP_ENDIF")+1,o=e.slice(n,s);if(!o[0]||!o[1]||o[1].s!=="ord")throw new Error("Invalid Ord tx. Prefix not found.");let a,i;if(o.forEach((c,d,g)=>{c.ops==="OP_1"&&(i=g[d+1].s),c.ops==="OP_0"&&(a=g[d+1].b)}),!a)throw new Error("Invalid Ord data.");if(!i)throw new Error("Invalid Ord content type.");const h={data:a,contentType:i};t.ORD||(t.ORD=[]),t.ORD.push(h)},I={name:"ORD",handler:ft,scriptChecker:ct};function B(t,e){return dt(t,e)}function dt(t,e,r){const n=t==null?0:t.length;if(!n)return-1;let s=n-1;return ht(t,e,s)}function ht(t,e,r,n){let s=r+1;for(;s--;)if(e(t[s],s,t))return s;return-1}const ie="1GvFYzwtFix3qSAZhESQVTz9DeudHZNoh1",ut=[{pair:"json"},{address:"string"},{timestamp:"string"}],gt=({dataObj:t,cell:e,tx:r})=>{if(e[0].s!==ie||!e[1]||!e[2]||!e[3]||!e[1].s||!e[2].s||!e[3].s)throw new Error(`Invalid RON record ${r==null?void 0:r.tx.h}`);const n=JSON.parse(e[1].s),s=Number(e[3].s);y(t,"RON",{pair:n,address:e[2].s,timestamp:s})},lt={name:"RON",address:ie,opReturnSchema:ut,handler:gt},ae="1SymRe7erxM46GByucUWnB9fEEMgo7spd",pt=[{url:"string"}],mt=({dataObj:t,cell:e,tx:r})=>{if(e[0].s!==ae||!e[1]||!e[1].s)throw new Error(`Invalid SymRe tx: ${r}`);y(t,"SYMRE",{url:e[1].s})},yt={name:"SYMRE",address:ae,opReturnSchema:pt,handler:mt},ce=new Map([]),fe=new Map([]),de=new Map([]),he=new Map,C=[G,W,X,se,oe,M,_e,qe,Ye,Ge,lt,yt,I],bt=C.map(t=>t.name),ue=[G,W,X,se,oe,I];for(const t of ue)t.address&&ce.set(t.address,t.name),fe.set(t.name,t.handler),t.opReturnSchema&&he.set(t.name,t.opReturnSchema),t.scriptChecker&&de.set(t.name,t.scriptChecker);class ge{enabledProtocols;protocolHandlers;protocolScriptCheckers;protocolOpReturnSchemas;constructor(){this.enabledProtocols=ce,this.protocolHandlers=fe,this.protocolScriptCheckers=de,this.protocolOpReturnSchemas=he}addProtocolHandler({name:e,address:r,opReturnSchema:n,handler:s,scriptChecker:o}){r&&this.enabledProtocols.set(r,e),this.protocolHandlers.set(e,s),n&&this.protocolOpReturnSchemas.set(e,n),o&&this.protocolScriptCheckers.set(e,o)}transformTx=async e=>{var n,s,o;if(!e||!e.in||!e.out)throw new Error("Cannot process tx");let r={blk:{i:((n=e.blk)==null?void 0:n.i)??0,t:((s=e.blk)==null?void 0:s.t)??0,h:((o=e.blk)==null?void 0:o.h)??""}};for(const[a,i]of Object.entries(e))if(a==="out")for(const h of e.out){const{tape:c}=h;c!=null&&c.some(m=>Pe(m))&&(r=await this.processDataProtocols(c,h,e,r));const d=this.protocolScriptCheckers.get(M.name),g=this.protocolScriptCheckers.get(I.name);if(c!=null&&c.some(m=>{const{cell:f}=m;if(d!=null&&d(f)||g!=null&&g(f))return!0}))for(const m of c){const{cell:f}=m;if(!f)throw new Error("empty cell while parsing");let l="";if(d!=null&&d(f))l=M.name;else if(g!=null&&g(f))l=I.name;else continue;this.process(l,{tx:e,cell:f,dataObj:r,tape:c,out:h})}}else a==="in"?r[a]=i.map(h=>{const c={...h};return c.tape=void 0,c}):r[a]=i;if(r.METANET&&e.parent){const a={ancestor:e.ancestor,parent:e.parent,child:e.child,head:e.head};r.METANET.push(a),r.ancestor=void 0,r.child=void 0,r.parent=void 0,r.head=void 0,r.node=void 0}return r};processUnknown=(e,r,n)=>{e&&!r[e]&&(r[e]=[]),r[e].push({i:n.i,e:n.e,tape:[]})};process=async(e,{cell:r,dataObj:n,tape:s,out:o,tx:a})=>{if(this.protocolHandlers.has(e)&&typeof this.protocolHandlers.get(e)=="function"){const i=this.protocolHandlers.get(e);i&&await i({dataObj:n,cell:r,tape:s,out:o,tx:a})}else y(n,e,r)};processDataProtocols=async(e,r,n,s)=>{for(const o of e){const{cell:a}=o;if(!a)throw new Error("empty cell while parsing");if(z(o))continue;const i=a[0].s;if(i){const h=this.enabledProtocols.get(i);h?await this.process(h,{cell:a,dataObj:s,tape:e,out:r,tx:n}):this.processUnknown(i,s,r)}}return s}}const le=async t=>{const e=`https://api.whatsonchain.com/v1/bsv/main/tx/${t}/hex`;return console.log("hitting",e),await(await fetch(e)).text()},pe=async t=>await we.parse({tx:{r:t},split:[{token:{op:106},include:"l"},{token:{s:"|"}}]}),wt=async(t,e)=>{if(typeof t=="string"){let n;if(t.length===64&&(n=await le(t)),Buffer.from(t).byteLength<=146)throw new Error("Invalid rawTx");n||(n=t);const s=await pe(n);if(s)t=s;else throw new Error("Invalid txid")}const r=new ge;if(e)if(r.enabledProtocols.clear(),Se(e))for(const n of C)e!=null&&e.includes(n.name)&&r.addProtocolHandler(n);else if(Ee(e))for(const n of e){const s=n;s&&r.addProtocolHandler(s)}else throw new Error("Invalid protocol array. Must be either an array of protocol names (string[]), or Protocol objects (Protocol[]).");return r.transformTx(t)};exports.BMAP=ge;exports.TransformTx=wt;exports.allProtocols=C;exports.bobFromRawTx=pe;exports.defaultProtocols=ue;exports.fetchRawTx=le;exports.supportedProtocols=bt;
//# sourceMappingURL=bmap.cjs.js.map
