{"id":"../node_modules/des.js/lib/des/ede.js","dependencies":[{"name":"D:\\code\\bmap\\package.json","includedInParent":true,"mtime":1672330103231},{"name":"D:\\code\\bmap\\node_modules\\des.js\\package.json","includedInParent":true,"mtime":1672328954275},{"name":"minimalistic-assert","loc":{"line":3,"column":21,"index":36},"parent":"D:\\code\\bmap\\node_modules\\des.js\\lib\\des\\ede.js","resolved":"D:\\code\\bmap\\node_modules\\minimalistic-assert\\index.js"},{"name":"inherits","loc":{"line":4,"column":23,"index":83},"parent":"D:\\code\\bmap\\node_modules\\des.js\\lib\\des\\ede.js","resolved":"D:\\code\\bmap\\node_modules\\inherits\\inherits_browser.js"},{"name":"./cipher","loc":{"line":6,"column":21,"index":118},"parent":"D:\\code\\bmap\\node_modules\\des.js\\lib\\des\\ede.js","resolved":"D:\\code\\bmap\\node_modules\\des.js\\lib\\des\\cipher.js"},{"name":"./des","loc":{"line":7,"column":18,"index":149},"parent":"D:\\code\\bmap\\node_modules\\des.js\\lib\\des\\ede.js","resolved":"D:\\code\\bmap\\node_modules\\des.js\\lib\\des\\des.js"}],"generated":{"js":"'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nvar Cipher = require('./cipher');\nvar DES = require('./des');\n\nfunction EDEState(type, key) {\n  assert.equal(key.length, 24, 'Invalid key length');\n\n  var k1 = key.slice(0, 8);\n  var k2 = key.slice(8, 16);\n  var k3 = key.slice(16, 24);\n\n  if (type === 'encrypt') {\n    this.ciphers = [\n      DES.create({ type: 'encrypt', key: k1 }),\n      DES.create({ type: 'decrypt', key: k2 }),\n      DES.create({ type: 'encrypt', key: k3 })\n    ];\n  } else {\n    this.ciphers = [\n      DES.create({ type: 'decrypt', key: k3 }),\n      DES.create({ type: 'encrypt', key: k2 }),\n      DES.create({ type: 'decrypt', key: k1 })\n    ];\n  }\n}\n\nfunction EDE(options) {\n  Cipher.call(this, options);\n\n  var state = new EDEState(this.type, this.options.key);\n  this._edeState = state;\n}\ninherits(EDE, Cipher);\n\nmodule.exports = EDE;\n\nEDE.create = function create(options) {\n  return new EDE(options);\n};\n\nEDE.prototype._update = function _update(inp, inOff, out, outOff) {\n  var state = this._edeState;\n\n  state.ciphers[0]._update(inp, inOff, out, outOff);\n  state.ciphers[1]._update(out, outOff, out, outOff);\n  state.ciphers[2]._update(out, outOff, out, outOff);\n};\n\nEDE.prototype._pad = DES.prototype._pad;\nEDE.prototype._unpad = DES.prototype._unpad;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/des.js/lib/des/ede.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/des.js/lib/des/ede.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/des.js/lib/des/ede.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/des.js/lib/des/ede.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/des.js/lib/des/ede.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/des.js/lib/des/ede.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/des.js/lib/des/ede.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/des.js/lib/des/ede.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/des.js/lib/des/ede.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/des.js/lib/des/ede.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/des.js/lib/des/ede.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/des.js/lib/des/ede.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/des.js/lib/des/ede.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/des.js/lib/des/ede.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/des.js/lib/des/ede.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/des.js/lib/des/ede.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/des.js/lib/des/ede.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/des.js/lib/des/ede.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/des.js/lib/des/ede.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/des.js/lib/des/ede.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/des.js/lib/des/ede.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/des.js/lib/des/ede.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/des.js/lib/des/ede.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/des.js/lib/des/ede.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/des.js/lib/des/ede.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/des.js/lib/des/ede.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/des.js/lib/des/ede.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/des.js/lib/des/ede.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/des.js/lib/des/ede.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/des.js/lib/des/ede.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/des.js/lib/des/ede.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/des.js/lib/des/ede.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/des.js/lib/des/ede.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/des.js/lib/des/ede.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/des.js/lib/des/ede.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/des.js/lib/des/ede.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/des.js/lib/des/ede.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/des.js/lib/des/ede.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/des.js/lib/des/ede.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/des.js/lib/des/ede.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/des.js/lib/des/ede.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/des.js/lib/des/ede.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/des.js/lib/des/ede.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/des.js/lib/des/ede.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/des.js/lib/des/ede.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/des.js/lib/des/ede.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/des.js/lib/des/ede.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/des.js/lib/des/ede.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/des.js/lib/des/ede.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/des.js/lib/des/ede.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/des.js/lib/des/ede.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/des.js/lib/des/ede.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/des.js/lib/des/ede.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/des.js/lib/des/ede.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/des.js/lib/des/ede.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}}],"sources":{"../node_modules/des.js/lib/des/ede.js":"'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nvar Cipher = require('./cipher');\nvar DES = require('./des');\n\nfunction EDEState(type, key) {\n  assert.equal(key.length, 24, 'Invalid key length');\n\n  var k1 = key.slice(0, 8);\n  var k2 = key.slice(8, 16);\n  var k3 = key.slice(16, 24);\n\n  if (type === 'encrypt') {\n    this.ciphers = [\n      DES.create({ type: 'encrypt', key: k1 }),\n      DES.create({ type: 'decrypt', key: k2 }),\n      DES.create({ type: 'encrypt', key: k3 })\n    ];\n  } else {\n    this.ciphers = [\n      DES.create({ type: 'decrypt', key: k3 }),\n      DES.create({ type: 'encrypt', key: k2 }),\n      DES.create({ type: 'decrypt', key: k1 })\n    ];\n  }\n}\n\nfunction EDE(options) {\n  Cipher.call(this, options);\n\n  var state = new EDEState(this.type, this.options.key);\n  this._edeState = state;\n}\ninherits(EDE, Cipher);\n\nmodule.exports = EDE;\n\nEDE.create = function create(options) {\n  return new EDE(options);\n};\n\nEDE.prototype._update = function _update(inp, inOff, out, outOff) {\n  var state = this._edeState;\n\n  state.ciphers[0]._update(inp, inOff, out, outOff);\n  state.ciphers[1]._update(out, outOff, out, outOff);\n  state.ciphers[2]._update(out, outOff, out, outOff);\n};\n\nEDE.prototype._pad = DES.prototype._pad;\nEDE.prototype._unpad = DES.prototype._unpad;\n"},"lineCount":55}},"error":null,"hash":"64bd738a312493ef308e2124ef0711cd","cacheData":{"env":{}}}