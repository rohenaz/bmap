{"id":"../node_modules/aes/lib/aes.js","dependencies":[{"name":"D:\\code\\bmap\\package.json","includedInParent":true,"mtime":1672330103231},{"name":"D:\\code\\bmap\\node_modules\\aes\\package.json","includedInParent":true,"mtime":1672328910608}],"generated":{"js":"\n\nmodule.exports = AES;\n\n//@param {Array} key The key as an array of 4, 6 or 8 words.\nfunction AES (key) {\n  if (!this._tables[0][0][0]) this._precompute();\n  \n  var tmp, encKey, decKey;\n  var sbox = this._tables[0][4];\n  var decTable = this._tables[1];\n  var keyLen = key.length; \n  var rcon = 1;\n  \n  if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n    throw new Error(\"invalid aes key size\");\n  }\n  \n  this._key = [encKey = key.slice(0), decKey = []];\n  \n  // schedule encryption keys\n  for (var i = keyLen; i < 4 * keyLen + 28; i++) {\n    tmp = encKey[i-1];\n    \n    // apply sbox\n    if (i % keyLen === 0 || (keyLen === 8 && i % keyLen === 4)) {\n      tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255]<< 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255];\n      \n      // shift rows and add rcon\n      if (i % keyLen === 0) {\n        tmp = tmp << 8 ^ tmp >>> 24 ^ rcon<<24;\n        rcon = rcon << 1 ^ (rcon >> 7) * 283;\n      }\n    }\n    \n    encKey[i] = encKey[i-keyLen] ^ tmp;\n  }\n  \n  // schedule decryption keys\n  for (var j = 0; i; j++, i--) {\n    tmp = encKey[j&3 ? i : i - 4];\n    if (i<=4 || j<4) {\n      decKey[j] = tmp;\n    } else {\n      decKey[j] = decTable[0][sbox[tmp>>>24      ]] ^\n                  decTable[1][sbox[tmp>>16  & 255]] ^\n                  decTable[2][sbox[tmp>>8   & 255]] ^\n                  decTable[3][sbox[tmp      & 255]];\n    }\n  }\n};\n\nAES.prototype = {\n  \n  /**\n   * Encrypt an array of 4 big-endian words.\n   * @param {Array} data The plaintext.\n   * @return {Array} The ciphertext.\n   */\n  encrypt:function (data) { return this._crypt(data, 0); },\n  \n  /**\n   * Decrypt an array of 4 big-endian words.\n   * @param {Array} data The ciphertext.\n   * @return {Array} The plaintext.\n   */\n  decrypt:function (data) { return this._crypt(data, 1); },\n  \n  /**\n   * The expanded S-box and inverse S-box tables.  These will be computed\n   * on the client so that we don't have to send them down the wire.\n   *\n   * There are two tables, _tables[0] is for encryption and\n   * _tables[1] is for decryption.\n   *\n   * The first 4 sub-tables are the expanded S-box with MixColumns.  The\n   * last (_tables[01][4]) is the S-box itself.\n   *\n   * @private\n   */\n  _tables: [\n    [ new Uint32Array(256), new Uint32Array(256), new Uint32Array(256), new Uint32Array(256), new Uint32Array(256) ],\n    [ new Uint32Array(256), new Uint32Array(256), new Uint32Array(256), new Uint32Array(256), new Uint32Array(256) ]\n  ],\n\n  //Expand the S-box tables.\n  _precompute: function () {\n    var encTable = this._tables[0], decTable = this._tables[1],\n       sbox = encTable[4], sboxInv = decTable[4],\n       i, x, xInv, d=new Uint8Array(256), th=new Uint8Array(256), x2, x4, x8, s, tEnc, tDec;\n\n    // Compute double and third tables\n    for (i = 0; i < 256; i++) {\n      th[( d[i] = i<<1 ^ (i>>7)*283 )^i]=i;\n    }\n   \n    for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n      // Compute sbox\n      s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n      s = s >> 8 ^ s & 255 ^ 99;\n      sbox[x] = s;\n      sboxInv[s] = x;\n       \n      // Compute MixColumns\n      x8 = d[x4 = d[x2 = d[x]]];\n      tDec = x8*0x1010101 ^ x4*0x10001 ^ x2*0x101 ^ x*0x1010100;\n      tEnc = d[s]*0x101 ^ s*0x1010100;\n       \n      for (i = 0; i < 4; i++) {\n        encTable[i][x] = tEnc = tEnc<<24 ^ tEnc>>>8;\n        decTable[i][s] = tDec = tDec<<24 ^ tDec>>>8;\n      }\n    }\n  },\n  \n  /**\n   * Encryption and decryption core.\n   * @param {Array} input Four words to be encrypted or decrypted.\n   * @param dir The direction, 0 for encrypt and 1 for decrypt.\n   * @return {Array} The four encrypted or decrypted words.\n   * @private\n   */\n  _crypt:function (input, dir) {\n    if (input.length !== 4) {\n      throw new Error(\"invalid aes block size\");\n    }\n    \n    var key = this._key[dir],\n        // state variables a,b,c,d are loaded with pre-whitened data\n        a = input[0]           ^ key[0],\n        b = input[dir ? 3 : 1] ^ key[1],\n        c = input[2]           ^ key[2],\n        d = input[dir ? 1 : 3] ^ key[3],\n        a2, b2, c2,\n        \n        nInnerRounds = key.length/4 - 2,\n        i,\n        kIndex = 4,\n        out = new Uint32Array(4),// <--- this is slower in Node.js, about the same in Chrome */ \n        table = this._tables[dir],\n        \n        // load up the tables\n        t0    = table[0],\n        t1    = table[1],\n        t2    = table[2],\n        t3    = table[3],\n        sbox  = table[4];\n \n    // Inner rounds.  Cribbed from OpenSSL.\n    for (i = 0; i < nInnerRounds; i++) {\n      a2 = t0[a>>>24] ^ t1[b>>16 & 255] ^ t2[c>>8 & 255] ^ t3[d & 255] ^ key[kIndex];\n      b2 = t0[b>>>24] ^ t1[c>>16 & 255] ^ t2[d>>8 & 255] ^ t3[a & 255] ^ key[kIndex + 1];\n      c2 = t0[c>>>24] ^ t1[d>>16 & 255] ^ t2[a>>8 & 255] ^ t3[b & 255] ^ key[kIndex + 2];\n      d  = t0[d>>>24] ^ t1[a>>16 & 255] ^ t2[b>>8 & 255] ^ t3[c & 255] ^ key[kIndex + 3];\n      kIndex += 4;\n      a=a2; b=b2; c=c2;\n    }\n        \n    // Last round.\n    for (i = 0; i < 4; i++) {\n      out[dir ? 3&-i : i] =\n        sbox[a>>>24      ]<<24 ^ \n        sbox[b>>16  & 255]<<16 ^\n        sbox[c>>8   & 255]<<8  ^\n        sbox[d      & 255]     ^\n        key[kIndex++];\n      a2=a; a=b; b=c; c=d; d=a2;\n    }\n    \n    return out;\n  }\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/aes/lib/aes.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/aes/lib/aes.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}}],"sources":{"../node_modules/aes/lib/aes.js":"\n\nmodule.exports = AES;\n\n//@param {Array} key The key as an array of 4, 6 or 8 words.\nfunction AES (key) {\n  if (!this._tables[0][0][0]) this._precompute();\n  \n  var tmp, encKey, decKey;\n  var sbox = this._tables[0][4];\n  var decTable = this._tables[1];\n  var keyLen = key.length; \n  var rcon = 1;\n  \n  if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n    throw new Error(\"invalid aes key size\");\n  }\n  \n  this._key = [encKey = key.slice(0), decKey = []];\n  \n  // schedule encryption keys\n  for (var i = keyLen; i < 4 * keyLen + 28; i++) {\n    tmp = encKey[i-1];\n    \n    // apply sbox\n    if (i % keyLen === 0 || (keyLen === 8 && i % keyLen === 4)) {\n      tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255]<< 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255];\n      \n      // shift rows and add rcon\n      if (i % keyLen === 0) {\n        tmp = tmp << 8 ^ tmp >>> 24 ^ rcon<<24;\n        rcon = rcon << 1 ^ (rcon >> 7) * 283;\n      }\n    }\n    \n    encKey[i] = encKey[i-keyLen] ^ tmp;\n  }\n  \n  // schedule decryption keys\n  for (var j = 0; i; j++, i--) {\n    tmp = encKey[j&3 ? i : i - 4];\n    if (i<=4 || j<4) {\n      decKey[j] = tmp;\n    } else {\n      decKey[j] = decTable[0][sbox[tmp>>>24      ]] ^\n                  decTable[1][sbox[tmp>>16  & 255]] ^\n                  decTable[2][sbox[tmp>>8   & 255]] ^\n                  decTable[3][sbox[tmp      & 255]];\n    }\n  }\n};\n\nAES.prototype = {\n  \n  /**\n   * Encrypt an array of 4 big-endian words.\n   * @param {Array} data The plaintext.\n   * @return {Array} The ciphertext.\n   */\n  encrypt:function (data) { return this._crypt(data, 0); },\n  \n  /**\n   * Decrypt an array of 4 big-endian words.\n   * @param {Array} data The ciphertext.\n   * @return {Array} The plaintext.\n   */\n  decrypt:function (data) { return this._crypt(data, 1); },\n  \n  /**\n   * The expanded S-box and inverse S-box tables.  These will be computed\n   * on the client so that we don't have to send them down the wire.\n   *\n   * There are two tables, _tables[0] is for encryption and\n   * _tables[1] is for decryption.\n   *\n   * The first 4 sub-tables are the expanded S-box with MixColumns.  The\n   * last (_tables[01][4]) is the S-box itself.\n   *\n   * @private\n   */\n  _tables: [\n    [ new Uint32Array(256), new Uint32Array(256), new Uint32Array(256), new Uint32Array(256), new Uint32Array(256) ],\n    [ new Uint32Array(256), new Uint32Array(256), new Uint32Array(256), new Uint32Array(256), new Uint32Array(256) ]\n  ],\n\n  //Expand the S-box tables.\n  _precompute: function () {\n    var encTable = this._tables[0], decTable = this._tables[1],\n       sbox = encTable[4], sboxInv = decTable[4],\n       i, x, xInv, d=new Uint8Array(256), th=new Uint8Array(256), x2, x4, x8, s, tEnc, tDec;\n\n    // Compute double and third tables\n    for (i = 0; i < 256; i++) {\n      th[( d[i] = i<<1 ^ (i>>7)*283 )^i]=i;\n    }\n   \n    for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n      // Compute sbox\n      s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n      s = s >> 8 ^ s & 255 ^ 99;\n      sbox[x] = s;\n      sboxInv[s] = x;\n       \n      // Compute MixColumns\n      x8 = d[x4 = d[x2 = d[x]]];\n      tDec = x8*0x1010101 ^ x4*0x10001 ^ x2*0x101 ^ x*0x1010100;\n      tEnc = d[s]*0x101 ^ s*0x1010100;\n       \n      for (i = 0; i < 4; i++) {\n        encTable[i][x] = tEnc = tEnc<<24 ^ tEnc>>>8;\n        decTable[i][s] = tDec = tDec<<24 ^ tDec>>>8;\n      }\n    }\n  },\n  \n  /**\n   * Encryption and decryption core.\n   * @param {Array} input Four words to be encrypted or decrypted.\n   * @param dir The direction, 0 for encrypt and 1 for decrypt.\n   * @return {Array} The four encrypted or decrypted words.\n   * @private\n   */\n  _crypt:function (input, dir) {\n    if (input.length !== 4) {\n      throw new Error(\"invalid aes block size\");\n    }\n    \n    var key = this._key[dir],\n        // state variables a,b,c,d are loaded with pre-whitened data\n        a = input[0]           ^ key[0],\n        b = input[dir ? 3 : 1] ^ key[1],\n        c = input[2]           ^ key[2],\n        d = input[dir ? 1 : 3] ^ key[3],\n        a2, b2, c2,\n        \n        nInnerRounds = key.length/4 - 2,\n        i,\n        kIndex = 4,\n        out = new Uint32Array(4),// <--- this is slower in Node.js, about the same in Chrome */ \n        table = this._tables[dir],\n        \n        // load up the tables\n        t0    = table[0],\n        t1    = table[1],\n        t2    = table[2],\n        t3    = table[3],\n        sbox  = table[4];\n \n    // Inner rounds.  Cribbed from OpenSSL.\n    for (i = 0; i < nInnerRounds; i++) {\n      a2 = t0[a>>>24] ^ t1[b>>16 & 255] ^ t2[c>>8 & 255] ^ t3[d & 255] ^ key[kIndex];\n      b2 = t0[b>>>24] ^ t1[c>>16 & 255] ^ t2[d>>8 & 255] ^ t3[a & 255] ^ key[kIndex + 1];\n      c2 = t0[c>>>24] ^ t1[d>>16 & 255] ^ t2[a>>8 & 255] ^ t3[b & 255] ^ key[kIndex + 2];\n      d  = t0[d>>>24] ^ t1[a>>16 & 255] ^ t2[b>>8 & 255] ^ t3[c & 255] ^ key[kIndex + 3];\n      kIndex += 4;\n      a=a2; b=b2; c=c2;\n    }\n        \n    // Last round.\n    for (i = 0; i < 4; i++) {\n      out[dir ? 3&-i : i] =\n        sbox[a>>>24      ]<<24 ^ \n        sbox[b>>16  & 255]<<16 ^\n        sbox[c>>8   & 255]<<8  ^\n        sbox[d      & 255]     ^\n        key[kIndex++];\n      a2=a; a=b; b=c; c=d; d=a2;\n    }\n    \n    return out;\n  }\n};\n"},"lineCount":173}},"error":null,"hash":"0f44cf390a795b1928a484c2013047ec","cacheData":{"env":{}}}