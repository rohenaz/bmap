{"id":"protocols/psp.ts","dependencies":[{"name":"D:\\code\\bmap\\tsconfig.json","includedInParent":true,"mtime":1672330088416},{"name":"D:\\code\\bmap\\package.json","includedInParent":true,"mtime":1672330103231},{"name":"@ts-bitcoin/core","loc":{"line":4,"column":23,"index":125},"parent":"D:\\code\\bmap\\src\\protocols\\psp.ts","resolved":"D:\\code\\bmap\\node_modules\\@ts-bitcoin\\core\\lib\\bundle.esm.js"},{"name":"../paymail","loc":{"line":5,"column":26,"index":173},"parent":"D:\\code\\bmap\\src\\protocols\\psp.ts","resolved":"D:\\code\\bmap\\src\\paymail.ts"},{"name":"../utils","loc":{"line":6,"column":24,"index":213},"parent":"D:\\code\\bmap\\src\\protocols\\psp.ts","resolved":"D:\\code\\bmap\\src\\utils.ts"},{"name":"buffer","parent":"D:\\code\\bmap\\src\\protocols\\psp.ts","resolved":"D:\\code\\bmap\\node_modules\\buffer\\index.js"}],"generated":{"js":"var define;\nvar Buffer = require(\"buffer\").Buffer;\n\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PSP = void 0;\nvar core_1 = require(\"@ts-bitcoin/core\");\nvar paymail_1 = require(\"../paymail\");\nvar utils_1 = require(\"../utils\");\nvar address = '1signyCizp1VyBsJ5Ss2tEAgw7zCYNJu4';\nvar querySchema = [{\n  signature: 'string'\n}, {\n  pubkey: 'string'\n}, {\n  paymail: 'string'\n}];\nvar validateSignature = function validateSignature(pspObj, cell, tape) {\n  if (!Array.isArray(tape) || tape.length < 3) {\n    throw new Error('PSP requires at least 3 cells including the prefix');\n  }\n  var cellIndex = -1;\n  tape.forEach(function (cc, index) {\n    if (cc.cell === cell) {\n      cellIndex = index;\n    }\n  });\n  if (cellIndex === -1) {\n    throw new Error('PSP could not find cell in tape');\n  }\n  var signatureBufferStatements = [];\n  for (var i = 0; i < cellIndex; i++) {\n    var cellContainer = tape[i];\n    if (!(0, utils_1.checkOpFalseOpReturn)(cellContainer)) {\n      cellContainer.cell.forEach(function (statement) {\n        // add the value as hex\n        var value = statement.h;\n        if (!value) {\n          value = Buffer.from(statement.b, 'base64').toString('hex');\n        }\n        if (!value) {\n          value = Buffer.from(statement.s).toString('hex');\n        }\n        signatureBufferStatements.push(Buffer.from(value, 'hex'));\n      });\n      signatureBufferStatements.push(Buffer.from('7c', 'hex')); // | hex ????\n    }\n  }\n\n  var dataScript = core_1.Script.fromSafeDataArray(signatureBufferStatements);\n  var messageBuffer = Buffer.from(dataScript.toHex(), 'hex');\n  // verify psp signature\n  var publicKey = core_1.PubKey.fromString(pspObj.pubkey);\n  var signingAddress = core_1.Address.fromPubKey(publicKey);\n  try {\n    pspObj.verified = core_1.Bsm.verify(messageBuffer, pspObj.signature, signingAddress);\n  } catch (e) {\n    pspObj.verified = false;\n  }\n  return pspObj.verified;\n};\nvar handler = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(_ref) {\n    var dataObj, cell, tape, pspObj, paymailPublicKeyVerified;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          dataObj = _ref.dataObj, cell = _ref.cell, tape = _ref.tape;\n          if (!(!cell.length || cell[0].s !== address || !cell[1] || !cell[2] || !cell[3] || !cell[1].b || !cell[2].s || !cell[3].s || !tape)) {\n            _context.next = 3;\n            break;\n          }\n          throw new Error(\"Invalid Paymail Signature Protocol record\");\n        case 3:\n          pspObj = {\n            signature: cell[1].s,\n            pubkey: cell[2].s,\n            paymail: cell[3].s,\n            verified: false\n          }; // verify signature\n          validateSignature(pspObj, cell, tape);\n          // check the paymail public key\n          _context.next = 7;\n          return (0, paymail_1.verifyPaymailPublicKey)(pspObj.paymail, pspObj.pubkey);\n        case 7:\n          paymailPublicKeyVerified = _context.sent;\n          pspObj.verified = pspObj.verified && paymailPublicKeyVerified;\n          (0, utils_1.saveProtocolData)(dataObj, 'PSP', pspObj);\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function handler(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexports.PSP = {\n  name: 'PSP',\n  address: address,\n  querySchema: querySchema,\n  handler: handler\n};"},"sourceMaps":{"js":{"mappings":[{"source":"protocols/psp.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":13,"column":0}},{"source":"protocols/psp.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":13,"column":4}},{"source":"protocols/psp.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":13,"column":10}},{"source":"protocols/psp.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":13,"column":13}},{"source":"protocols/psp.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":13,"column":20}},{"source":"protocols/psp.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":13,"column":21}},{"source":"protocols/psp.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":13,"column":39}},{"source":"protocols/psp.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":13,"column":40}},{"source":"protocols/psp.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":14,"column":0}},{"source":"protocols/psp.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":14,"column":4}},{"source":"protocols/psp.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":14,"column":13}},{"source":"protocols/psp.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":14,"column":16}},{"source":"protocols/psp.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":14,"column":23}},{"source":"protocols/psp.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":14,"column":24}},{"source":"protocols/psp.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":14,"column":36}},{"source":"protocols/psp.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":14,"column":37}},{"source":"protocols/psp.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":15,"column":0}},{"source":"protocols/psp.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":15,"column":4}},{"source":"protocols/psp.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":15,"column":11}},{"source":"protocols/psp.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":15,"column":14}},{"source":"protocols/psp.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":15,"column":21}},{"source":"protocols/psp.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":15,"column":22}},{"source":"protocols/psp.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":15,"column":32}},{"source":"protocols/psp.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":15,"column":33}},{"source":"protocols/psp.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":16,"column":0}},{"source":"protocols/psp.ts","name":null,"original":{"line":7,"column":6},"generated":{"line":16,"column":4}},{"source":"protocols/psp.ts","name":null,"original":{"line":7,"column":13},"generated":{"line":16,"column":11}},{"source":"protocols/psp.ts","name":null,"original":{"line":7,"column":16},"generated":{"line":16,"column":14}},{"source":"protocols/psp.ts","name":null,"original":{"line":7,"column":51},"generated":{"line":16,"column":49}},{"source":"protocols/psp.ts","name":null,"original":{"line":9,"column":0},"generated":{"line":17,"column":0}},{"source":"protocols/psp.ts","name":null,"original":{"line":9,"column":6},"generated":{"line":17,"column":4}},{"source":"protocols/psp.ts","name":null,"original":{"line":9,"column":17},"generated":{"line":17,"column":15}},{"source":"protocols/psp.ts","name":null,"original":{"line":9,"column":20},"generated":{"line":17,"column":18}},{"source":"protocols/psp.ts","name":null,"original":{"line":10,"column":4},"generated":{"line":17,"column":19}},{"source":"protocols/psp.ts","name":null,"original":{"line":10,"column":6},"generated":{"line":18,"column":2}},{"source":"protocols/psp.ts","name":null,"original":{"line":10,"column":15},"generated":{"line":18,"column":11}},{"source":"protocols/psp.ts","name":null,"original":{"line":10,"column":17},"generated":{"line":18,"column":13}},{"source":"protocols/psp.ts","name":null,"original":{"line":10,"column":25},"generated":{"line":19,"column":0}},{"source":"protocols/psp.ts","name":null,"original":{"line":10,"column":27},"generated":{"line":19,"column":1}},{"source":"protocols/psp.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":19,"column":3}},{"source":"protocols/psp.ts","name":null,"original":{"line":11,"column":6},"generated":{"line":20,"column":2}},{"source":"protocols/psp.ts","name":null,"original":{"line":11,"column":12},"generated":{"line":20,"column":8}},{"source":"protocols/psp.ts","name":null,"original":{"line":11,"column":14},"generated":{"line":20,"column":10}},{"source":"protocols/psp.ts","name":null,"original":{"line":11,"column":22},"generated":{"line":21,"column":0}},{"source":"protocols/psp.ts","name":null,"original":{"line":11,"column":24},"generated":{"line":21,"column":1}},{"source":"protocols/psp.ts","name":null,"original":{"line":12,"column":4},"generated":{"line":21,"column":3}},{"source":"protocols/psp.ts","name":null,"original":{"line":12,"column":6},"generated":{"line":22,"column":2}},{"source":"protocols/psp.ts","name":null,"original":{"line":12,"column":13},"generated":{"line":22,"column":9}},{"source":"protocols/psp.ts","name":null,"original":{"line":12,"column":15},"generated":{"line":22,"column":11}},{"source":"protocols/psp.ts","name":null,"original":{"line":12,"column":23},"generated":{"line":23,"column":0}},{"source":"protocols/psp.ts","name":null,"original":{"line":12,"column":25},"generated":{"line":23,"column":1}},{"source":"protocols/psp.ts","name":null,"original":{"line":13,"column":1},"generated":{"line":23,"column":2}},{"source":"protocols/psp.ts","name":null,"original":{"line":15,"column":0},"generated":{"line":24,"column":0}},{"source":"protocols/psp.ts","name":null,"original":{"line":15,"column":6},"generated":{"line":24,"column":4}},{"source":"protocols/psp.ts","name":null,"original":{"line":15,"column":23},"generated":{"line":24,"column":21}},{"source":"protocols/psp.ts","name":null,"original":{"line":15,"column":26},"generated":{"line":24,"column":24}},{"source":"protocols/psp.ts","name":null,"original":{"line":15,"column":6},"generated":{"line":24,"column":33}},{"source":"protocols/psp.ts","name":null,"original":{"line":15,"column":23},"generated":{"line":24,"column":50}},{"source":"protocols/psp.ts","name":null,"original":{"line":16,"column":4},"generated":{"line":24,"column":51}},{"source":"protocols/psp.ts","name":null,"original":{"line":16,"column":19},"generated":{"line":24,"column":57}},{"source":"protocols/psp.ts","name":null,"original":{"line":17,"column":4},"generated":{"line":24,"column":59}},{"source":"protocols/psp.ts","name":null,"original":{"line":17,"column":16},"generated":{"line":24,"column":63}},{"source":"protocols/psp.ts","name":null,"original":{"line":18,"column":4},"generated":{"line":24,"column":65}},{"source":"protocols/psp.ts","name":null,"original":{"line":18,"column":16},"generated":{"line":24,"column":69}},{"source":"protocols/psp.ts","name":null,"original":{"line":18,"column":16},"generated":{"line":24,"column":71}},{"source":"protocols/psp.ts","name":null,"original":{"line":20,"column":4},"generated":{"line":25,"column":2}},{"source":"protocols/psp.ts","name":null,"original":{"line":20,"column":8},"generated":{"line":25,"column":6}},{"source":"protocols/psp.ts","name":null,"original":{"line":20,"column":9},"generated":{"line":25,"column":7}},{"source":"protocols/psp.ts","name":null,"original":{"line":20,"column":14},"generated":{"line":25,"column":12}},{"source":"protocols/psp.ts","name":null,"original":{"line":20,"column":15},"generated":{"line":25,"column":13}},{"source":"protocols/psp.ts","name":null,"original":{"line":20,"column":22},"generated":{"line":25,"column":20}},{"source":"protocols/psp.ts","name":null,"original":{"line":20,"column":23},"generated":{"line":25,"column":21}},{"source":"protocols/psp.ts","name":null,"original":{"line":20,"column":27},"generated":{"line":25,"column":25}},{"source":"protocols/psp.ts","name":null,"original":{"line":20,"column":28},"generated":{"line":25,"column":26}},{"source":"protocols/psp.ts","name":null,"original":{"line":20,"column":32},"generated":{"line":25,"column":30}},{"source":"protocols/psp.ts","name":null,"original":{"line":20,"column":36},"generated":{"line":25,"column":34}},{"source":"protocols/psp.ts","name":null,"original":{"line":20,"column":37},"generated":{"line":25,"column":35}},{"source":"protocols/psp.ts","name":null,"original":{"line":20,"column":43},"generated":{"line":25,"column":41}},{"source":"protocols/psp.ts","name":null,"original":{"line":20,"column":46},"generated":{"line":25,"column":44}},{"source":"protocols/psp.ts","name":null,"original":{"line":20,"column":47},"generated":{"line":25,"column":45}},{"source":"protocols/psp.ts","name":null,"original":{"line":20,"column":49},"generated":{"line":25,"column":47}},{"source":"protocols/psp.ts","name":null,"original":{"line":21,"column":8},"generated":{"line":26,"column":4}},{"source":"protocols/psp.ts","name":null,"original":{"line":21,"column":14},"generated":{"line":26,"column":10}},{"source":"protocols/psp.ts","name":null,"original":{"line":21,"column":18},"generated":{"line":26,"column":14}},{"source":"protocols/psp.ts","name":null,"original":{"line":21,"column":23},"generated":{"line":26,"column":19}},{"source":"protocols/psp.ts","name":null,"original":{"line":21,"column":24},"generated":{"line":26,"column":20}},{"source":"protocols/psp.ts","name":null,"original":{"line":21,"column":76},"generated":{"line":26,"column":72}},{"source":"protocols/psp.ts","name":null,"original":{"line":21,"column":77},"generated":{"line":26,"column":73}},{"source":"protocols/psp.ts","name":null,"original":{"line":24,"column":4},"generated":{"line":28,"column":2}},{"source":"protocols/psp.ts","name":null,"original":{"line":24,"column":8},"generated":{"line":28,"column":6}},{"source":"protocols/psp.ts","name":null,"original":{"line":24,"column":17},"generated":{"line":28,"column":15}},{"source":"protocols/psp.ts","name":null,"original":{"line":24,"column":20},"generated":{"line":28,"column":18}},{"source":"protocols/psp.ts","name":null,"original":{"line":24,"column":21},"generated":{"line":28,"column":19}},{"source":"protocols/psp.ts","name":null,"original":{"line":24,"column":22},"generated":{"line":28,"column":20}},{"source":"protocols/psp.ts","name":null,"original":{"line":25,"column":4},"generated":{"line":29,"column":2}},{"source":"protocols/psp.ts","name":null,"original":{"line":25,"column":8},"generated":{"line":29,"column":6}},{"source":"protocols/psp.ts","name":null,"original":{"line":25,"column":9},"generated":{"line":29,"column":7}},{"source":"protocols/psp.ts","name":null,"original":{"line":25,"column":16},"generated":{"line":29,"column":14}},{"source":"protocols/psp.ts","name":null,"original":{"line":25,"column":17},"generated":{"line":29,"column":15}},{"source":"protocols/psp.ts","name":null,"original":{"line":25,"column":18},"generated":{"line":29,"column":25}},{"source":"protocols/psp.ts","name":null,"original":{"line":25,"column":20},"generated":{"line":29,"column":27}},{"source":"protocols/psp.ts","name":null,"original":{"line":25,"column":22},"generated":{"line":29,"column":29}},{"source":"protocols/psp.ts","name":null,"original":{"line":25,"column":27},"generated":{"line":29,"column":34}},{"source":"protocols/psp.ts","name":null,"original":{"line":25,"column":31},"generated":{"line":29,"column":36}},{"source":"protocols/psp.ts","name":null,"original":{"line":26,"column":8},"generated":{"line":30,"column":4}},{"source":"protocols/psp.ts","name":null,"original":{"line":26,"column":12},"generated":{"line":30,"column":8}},{"source":"protocols/psp.ts","name":null,"original":{"line":26,"column":14},"generated":{"line":30,"column":10}},{"source":"protocols/psp.ts","name":null,"original":{"line":26,"column":15},"generated":{"line":30,"column":11}},{"source":"protocols/psp.ts","name":null,"original":{"line":26,"column":19},"generated":{"line":30,"column":15}},{"source":"protocols/psp.ts","name":null,"original":{"line":26,"column":24},"generated":{"line":30,"column":20}},{"source":"protocols/psp.ts","name":null,"original":{"line":26,"column":28},"generated":{"line":30,"column":24}},{"source":"protocols/psp.ts","name":null,"original":{"line":26,"column":30},"generated":{"line":30,"column":26}},{"source":"protocols/psp.ts","name":null,"original":{"line":27,"column":12},"generated":{"line":31,"column":6}},{"source":"protocols/psp.ts","name":null,"original":{"line":27,"column":21},"generated":{"line":31,"column":15}},{"source":"protocols/psp.ts","name":null,"original":{"line":27,"column":24},"generated":{"line":31,"column":18}},{"source":"protocols/psp.ts","name":null,"original":{"line":27,"column":29},"generated":{"line":31,"column":23}},{"source":"protocols/psp.ts","name":null,"original":{"line":29,"column":4},"generated":{"line":33,"column":2}},{"source":"protocols/psp.ts","name":null,"original":{"line":29,"column":5},"generated":{"line":33,"column":3}},{"source":"protocols/psp.ts","name":null,"original":{"line":29,"column":6},"generated":{"line":33,"column":4}},{"source":"protocols/psp.ts","name":null,"original":{"line":30,"column":4},"generated":{"line":34,"column":2}},{"source":"protocols/psp.ts","name":null,"original":{"line":30,"column":8},"generated":{"line":34,"column":6}},{"source":"protocols/psp.ts","name":null,"original":{"line":30,"column":17},"generated":{"line":34,"column":15}},{"source":"protocols/psp.ts","name":null,"original":{"line":30,"column":22},"generated":{"line":34,"column":20}},{"source":"protocols/psp.ts","name":null,"original":{"line":30,"column":23},"generated":{"line":34,"column":21}},{"source":"protocols/psp.ts","name":null,"original":{"line":30,"column":24},"generated":{"line":34,"column":22}},{"source":"protocols/psp.ts","name":null,"original":{"line":30,"column":26},"generated":{"line":34,"column":24}},{"source":"protocols/psp.ts","name":null,"original":{"line":31,"column":8},"generated":{"line":35,"column":4}},{"source":"protocols/psp.ts","name":null,"original":{"line":31,"column":14},"generated":{"line":35,"column":10}},{"source":"protocols/psp.ts","name":null,"original":{"line":31,"column":18},"generated":{"line":35,"column":14}},{"source":"protocols/psp.ts","name":null,"original":{"line":31,"column":23},"generated":{"line":35,"column":19}},{"source":"protocols/psp.ts","name":null,"original":{"line":31,"column":24},"generated":{"line":35,"column":20}},{"source":"protocols/psp.ts","name":null,"original":{"line":31,"column":57},"generated":{"line":35,"column":53}},{"source":"protocols/psp.ts","name":null,"original":{"line":31,"column":58},"generated":{"line":35,"column":54}},{"source":"protocols/psp.ts","name":null,"original":{"line":34,"column":4},"generated":{"line":37,"column":2}},{"source":"protocols/psp.ts","name":null,"original":{"line":34,"column":10},"generated":{"line":37,"column":6}},{"source":"protocols/psp.ts","name":null,"original":{"line":34,"column":35},"generated":{"line":37,"column":31}},{"source":"protocols/psp.ts","name":null,"original":{"line":34,"column":38},"generated":{"line":37,"column":34}},{"source":"protocols/psp.ts","name":null,"original":{"line":34,"column":40},"generated":{"line":37,"column":36}},{"source":"protocols/psp.ts","name":null,"original":{"line":35,"column":4},"generated":{"line":38,"column":2}},{"source":"protocols/psp.ts","name":null,"original":{"line":35,"column":9},"generated":{"line":38,"column":7}},{"source":"protocols/psp.ts","name":null,"original":{"line":35,"column":13},"generated":{"line":38,"column":11}},{"source":"protocols/psp.ts","name":null,"original":{"line":35,"column":14},"generated":{"line":38,"column":12}},{"source":"protocols/psp.ts","name":null,"original":{"line":35,"column":17},"generated":{"line":38,"column":15}},{"source":"protocols/psp.ts","name":null,"original":{"line":35,"column":18},"generated":{"line":38,"column":16}},{"source":"protocols/psp.ts","name":null,"original":{"line":35,"column":20},"generated":{"line":38,"column":18}},{"source":"protocols/psp.ts","name":null,"original":{"line":35,"column":21},"generated":{"line":38,"column":19}},{"source":"protocols/psp.ts","name":null,"original":{"line":35,"column":24},"generated":{"line":38,"column":22}},{"source":"protocols/psp.ts","name":null,"original":{"line":35,"column":33},"generated":{"line":38,"column":31}},{"source":"protocols/psp.ts","name":null,"original":{"line":35,"column":35},"generated":{"line":38,"column":33}},{"source":"protocols/psp.ts","name":null,"original":{"line":35,"column":36},"generated":{"line":38,"column":34}},{"source":"protocols/psp.ts","name":null,"original":{"line":35,"column":38},"generated":{"line":38,"column":36}},{"source":"protocols/psp.ts","name":null,"original":{"line":35,"column":40},"generated":{"line":38,"column":38}},{"source":"protocols/psp.ts","name":null,"original":{"line":36,"column":8},"generated":{"line":39,"column":4}},{"source":"protocols/psp.ts","name":null,"original":{"line":36,"column":14},"generated":{"line":39,"column":8}},{"source":"protocols/psp.ts","name":null,"original":{"line":36,"column":27},"generated":{"line":39,"column":21}},{"source":"protocols/psp.ts","name":null,"original":{"line":36,"column":30},"generated":{"line":39,"column":24}},{"source":"protocols/psp.ts","name":null,"original":{"line":36,"column":34},"generated":{"line":39,"column":28}},{"source":"protocols/psp.ts","name":null,"original":{"line":36,"column":35},"generated":{"line":39,"column":29}},{"source":"protocols/psp.ts","name":null,"original":{"line":36,"column":36},"generated":{"line":39,"column":30}},{"source":"protocols/psp.ts","name":null,"original":{"line":36,"column":37},"generated":{"line":39,"column":31}},{"source":"protocols/psp.ts","name":null,"original":{"line":37,"column":8},"generated":{"line":40,"column":4}},{"source":"protocols/psp.ts","name":null,"original":{"line":37,"column":12},"generated":{"line":40,"column":8}},{"source":"protocols/psp.ts","name":null,"original":{"line":37,"column":13},"generated":{"line":40,"column":9}},{"source":"protocols/psp.ts","name":null,"original":{"line":37,"column":13},"generated":{"line":40,"column":10}},{"source":"protocols/psp.ts","name":null,"original":{"line":37,"column":13},"generated":{"line":40,"column":11}},{"source":"protocols/psp.ts","name":null,"original":{"line":37,"column":13},"generated":{"line":40,"column":13}},{"source":"protocols/psp.ts","name":null,"original":{"line":37,"column":13},"generated":{"line":40,"column":20}},{"source":"protocols/psp.ts","name":null,"original":{"line":37,"column":13},"generated":{"line":40,"column":21}},{"source":"protocols/psp.ts","name":null,"original":{"line":37,"column":33},"generated":{"line":40,"column":41}},{"source":"protocols/psp.ts","name":null,"original":{"line":37,"column":34},"generated":{"line":40,"column":43}},{"source":"protocols/psp.ts","name":null,"original":{"line":37,"column":47},"generated":{"line":40,"column":56}},{"source":"protocols/psp.ts","name":null,"original":{"line":37,"column":48},"generated":{"line":40,"column":57}},{"source":"protocols/psp.ts","name":null,"original":{"line":37,"column":50},"generated":{"line":40,"column":59}},{"source":"protocols/psp.ts","name":null,"original":{"line":38,"column":12},"generated":{"line":41,"column":6}},{"source":"protocols/psp.ts","name":null,"original":{"line":38,"column":25},"generated":{"line":41,"column":19}},{"source":"protocols/psp.ts","name":null,"original":{"line":38,"column":26},"generated":{"line":41,"column":20}},{"source":"protocols/psp.ts","name":null,"original":{"line":38,"column":30},"generated":{"line":41,"column":24}},{"source":"protocols/psp.ts","name":null,"original":{"line":38,"column":31},"generated":{"line":41,"column":25}},{"source":"protocols/psp.ts","name":null,"original":{"line":38,"column":38},"generated":{"line":41,"column":32}},{"source":"protocols/psp.ts","name":null,"original":{"line":38,"column":39},"generated":{"line":41,"column":33}},{"source":"protocols/psp.ts","name":null,"original":{"line":38,"column":40},"generated":{"line":41,"column":43}},{"source":"protocols/psp.ts","name":null,"original":{"line":38,"column":49},"generated":{"line":41,"column":52}},{"source":"protocols/psp.ts","name":null,"original":{"line":38,"column":53},"generated":{"line":41,"column":54}},{"source":"protocols/psp.ts","name":null,"original":{"line":39,"column":16},"generated":{"line":42,"column":8}},{"source":"protocols/psp.ts","name":null,"original":{"line":40,"column":16},"generated":{"line":43,"column":8}},{"source":"protocols/psp.ts","name":null,"original":{"line":40,"column":20},"generated":{"line":43,"column":12}},{"source":"protocols/psp.ts","name":null,"original":{"line":40,"column":25},"generated":{"line":43,"column":17}},{"source":"protocols/psp.ts","name":null,"original":{"line":40,"column":28},"generated":{"line":43,"column":20}},{"source":"protocols/psp.ts","name":null,"original":{"line":40,"column":37},"generated":{"line":43,"column":29}},{"source":"protocols/psp.ts","name":null,"original":{"line":40,"column":38},"generated":{"line":43,"column":30}},{"source":"protocols/psp.ts","name":null,"original":{"line":40,"column":39},"generated":{"line":43,"column":31}},{"source":"protocols/psp.ts","name":null,"original":{"line":41,"column":16},"generated":{"line":44,"column":8}},{"source":"protocols/psp.ts","name":null,"original":{"line":41,"column":20},"generated":{"line":44,"column":12}},{"source":"protocols/psp.ts","name":null,"original":{"line":41,"column":21},"generated":{"line":44,"column":13}},{"source":"protocols/psp.ts","name":null,"original":{"line":41,"column":26},"generated":{"line":44,"column":18}},{"source":"protocols/psp.ts","name":null,"original":{"line":41,"column":28},"generated":{"line":44,"column":20}},{"source":"protocols/psp.ts","name":null,"original":{"line":42,"column":20},"generated":{"line":45,"column":10}},{"source":"protocols/psp.ts","name":null,"original":{"line":42,"column":25},"generated":{"line":45,"column":15}},{"source":"protocols/psp.ts","name":null,"original":{"line":42,"column":28},"generated":{"line":45,"column":18}},{"source":"protocols/psp.ts","name":null,"original":{"line":42,"column":34},"generated":{"line":45,"column":24}},{"source":"protocols/psp.ts","name":null,"original":{"line":42,"column":35},"generated":{"line":45,"column":25}},{"source":"protocols/psp.ts","name":null,"original":{"line":42,"column":39},"generated":{"line":45,"column":29}},{"source":"protocols/psp.ts","name":null,"original":{"line":43,"column":24},"generated":{"line":45,"column":30}},{"source":"protocols/psp.ts","name":null,"original":{"line":43,"column":33},"generated":{"line":45,"column":39}},{"source":"protocols/psp.ts","name":null,"original":{"line":43,"column":34},"generated":{"line":45,"column":40}},{"source":"protocols/psp.ts","name":null,"original":{"line":43,"column":45},"generated":{"line":45,"column":41}},{"source":"protocols/psp.ts","name":null,"original":{"line":44,"column":24},"generated":{"line":45,"column":43}},{"source":"protocols/psp.ts","name":null,"original":{"line":44,"column":32},"generated":{"line":45,"column":51}},{"source":"protocols/psp.ts","name":null,"original":{"line":45,"column":21},"generated":{"line":45,"column":52}},{"source":"protocols/psp.ts","name":null,"original":{"line":45,"column":22},"generated":{"line":45,"column":53}},{"source":"protocols/psp.ts","name":null,"original":{"line":45,"column":30},"generated":{"line":45,"column":61}},{"source":"protocols/psp.ts","name":null,"original":{"line":45,"column":31},"generated":{"line":45,"column":62}},{"source":"protocols/psp.ts","name":null,"original":{"line":45,"column":36},"generated":{"line":45,"column":67}},{"source":"protocols/psp.ts","name":null,"original":{"line":45,"column":37},"generated":{"line":45,"column":68}},{"source":"protocols/psp.ts","name":null,"original":{"line":47,"column":16},"generated":{"line":47,"column":8}},{"source":"protocols/psp.ts","name":null,"original":{"line":47,"column":20},"generated":{"line":47,"column":12}},{"source":"protocols/psp.ts","name":null,"original":{"line":47,"column":21},"generated":{"line":47,"column":13}},{"source":"protocols/psp.ts","name":null,"original":{"line":47,"column":26},"generated":{"line":47,"column":18}},{"source":"protocols/psp.ts","name":null,"original":{"line":47,"column":28},"generated":{"line":47,"column":20}},{"source":"protocols/psp.ts","name":null,"original":{"line":48,"column":20},"generated":{"line":48,"column":10}},{"source":"protocols/psp.ts","name":null,"original":{"line":48,"column":25},"generated":{"line":48,"column":15}},{"source":"protocols/psp.ts","name":null,"original":{"line":48,"column":28},"generated":{"line":48,"column":18}},{"source":"protocols/psp.ts","name":null,"original":{"line":48,"column":34},"generated":{"line":48,"column":24}},{"source":"protocols/psp.ts","name":null,"original":{"line":48,"column":35},"generated":{"line":48,"column":25}},{"source":"protocols/psp.ts","name":null,"original":{"line":48,"column":39},"generated":{"line":48,"column":29}},{"source":"protocols/psp.ts","name":null,"original":{"line":48,"column":40},"generated":{"line":48,"column":30}},{"source":"protocols/psp.ts","name":null,"original":{"line":48,"column":49},"generated":{"line":48,"column":39}},{"source":"protocols/psp.ts","name":null,"original":{"line":48,"column":50},"generated":{"line":48,"column":40}},{"source":"protocols/psp.ts","name":null,"original":{"line":48,"column":61},"generated":{"line":48,"column":41}},{"source":"protocols/psp.ts","name":null,"original":{"line":48,"column":62},"generated":{"line":48,"column":42}},{"source":"protocols/psp.ts","name":null,"original":{"line":48,"column":63},"generated":{"line":48,"column":43}},{"source":"protocols/psp.ts","name":null,"original":{"line":48,"column":71},"generated":{"line":48,"column":51}},{"source":"protocols/psp.ts","name":null,"original":{"line":48,"column":72},"generated":{"line":48,"column":52}},{"source":"protocols/psp.ts","name":null,"original":{"line":48,"column":77},"generated":{"line":48,"column":57}},{"source":"protocols/psp.ts","name":null,"original":{"line":48,"column":78},"generated":{"line":48,"column":58}},{"source":"protocols/psp.ts","name":null,"original":{"line":50,"column":16},"generated":{"line":50,"column":8}},{"source":"protocols/psp.ts","name":null,"original":{"line":50,"column":41},"generated":{"line":50,"column":33}},{"source":"protocols/psp.ts","name":null,"original":{"line":50,"column":42},"generated":{"line":50,"column":34}},{"source":"protocols/psp.ts","name":null,"original":{"line":50,"column":46},"generated":{"line":50,"column":38}},{"source":"protocols/psp.ts","name":null,"original":{"line":50,"column":47},"generated":{"line":50,"column":39}},{"source":"protocols/psp.ts","name":null,"original":{"line":50,"column":53},"generated":{"line":50,"column":45}},{"source":"protocols/psp.ts","name":null,"original":{"line":50,"column":54},"generated":{"line":50,"column":46}},{"source":"protocols/psp.ts","name":null,"original":{"line":50,"column":58},"generated":{"line":50,"column":50}},{"source":"protocols/psp.ts","name":null,"original":{"line":50,"column":59},"generated":{"line":50,"column":51}},{"source":"protocols/psp.ts","name":null,"original":{"line":50,"column":64},"generated":{"line":50,"column":56}},{"source":"protocols/psp.ts","name":null,"original":{"line":50,"column":66},"generated":{"line":50,"column":58}},{"source":"protocols/psp.ts","name":null,"original":{"line":50,"column":71},"generated":{"line":50,"column":63}},{"source":"protocols/psp.ts","name":null,"original":{"line":50,"column":72},"generated":{"line":50,"column":64}},{"source":"protocols/psp.ts","name":null,"original":{"line":50,"column":73},"generated":{"line":50,"column":65}},{"source":"protocols/psp.ts","name":null,"original":{"line":51,"column":12},"generated":{"line":51,"column":6}},{"source":"protocols/psp.ts","name":null,"original":{"line":51,"column":13},"generated":{"line":51,"column":7}},{"source":"protocols/psp.ts","name":null,"original":{"line":51,"column":14},"generated":{"line":51,"column":8}},{"source":"protocols/psp.ts","name":null,"original":{"line":52,"column":12},"generated":{"line":52,"column":6}},{"source":"protocols/psp.ts","name":null,"original":{"line":52,"column":37},"generated":{"line":52,"column":31}},{"source":"protocols/psp.ts","name":null,"original":{"line":52,"column":38},"generated":{"line":52,"column":32}},{"source":"protocols/psp.ts","name":null,"original":{"line":52,"column":42},"generated":{"line":52,"column":36}},{"source":"protocols/psp.ts","name":null,"original":{"line":52,"column":43},"generated":{"line":52,"column":37}},{"source":"protocols/psp.ts","name":null,"original":{"line":52,"column":49},"generated":{"line":52,"column":43}},{"source":"protocols/psp.ts","name":null,"original":{"line":52,"column":50},"generated":{"line":52,"column":44}},{"source":"protocols/psp.ts","name":null,"original":{"line":52,"column":54},"generated":{"line":52,"column":48}},{"source":"protocols/psp.ts","name":null,"original":{"line":52,"column":55},"generated":{"line":52,"column":49}},{"source":"protocols/psp.ts","name":null,"original":{"line":52,"column":59},"generated":{"line":52,"column":53}},{"source":"protocols/psp.ts","name":null,"original":{"line":52,"column":61},"generated":{"line":52,"column":55}},{"source":"protocols/psp.ts","name":null,"original":{"line":52,"column":66},"generated":{"line":52,"column":60}},{"source":"protocols/psp.ts","name":null,"original":{"line":52,"column":67},"generated":{"line":52,"column":61}},{"source":"protocols/psp.ts","name":null,"original":{"line":52,"column":68},"generated":{"line":52,"column":62}},{"source":"protocols/psp.ts","name":null,"original":{"line":52,"column":68},"generated":{"line":52,"column":63}},{"source":"protocols/psp.ts","name":null,"original":{"line":52,"column":69},"generated":{"line":52,"column":64}},{"source":"protocols/psp.ts","name":null,"original":{"line":55,"column":4},"generated":{"line":56,"column":2}},{"source":"protocols/psp.ts","name":null,"original":{"line":55,"column":10},"generated":{"line":56,"column":6}},{"source":"protocols/psp.ts","name":null,"original":{"line":55,"column":20},"generated":{"line":56,"column":16}},{"source":"protocols/psp.ts","name":null,"original":{"line":55,"column":23},"generated":{"line":56,"column":19}},{"source":"protocols/psp.ts","name":null,"original":{"line":55,"column":23},"generated":{"line":56,"column":25}},{"source":"protocols/psp.ts","name":null,"original":{"line":55,"column":23},"generated":{"line":56,"column":26}},{"source":"protocols/psp.ts","name":null,"original":{"line":55,"column":29},"generated":{"line":56,"column":32}},{"source":"protocols/psp.ts","name":null,"original":{"line":55,"column":30},"generated":{"line":56,"column":33}},{"source":"protocols/psp.ts","name":null,"original":{"line":55,"column":47},"generated":{"line":56,"column":50}},{"source":"protocols/psp.ts","name":null,"original":{"line":55,"column":48},"generated":{"line":56,"column":51}},{"source":"protocols/psp.ts","name":null,"original":{"line":55,"column":73},"generated":{"line":56,"column":76}},{"source":"protocols/psp.ts","name":null,"original":{"line":55,"column":74},"generated":{"line":56,"column":77}},{"source":"protocols/psp.ts","name":null,"original":{"line":56,"column":4},"generated":{"line":57,"column":2}},{"source":"protocols/psp.ts","name":null,"original":{"line":56,"column":10},"generated":{"line":57,"column":6}},{"source":"protocols/psp.ts","name":null,"original":{"line":56,"column":23},"generated":{"line":57,"column":19}},{"source":"protocols/psp.ts","name":null,"original":{"line":56,"column":26},"generated":{"line":57,"column":22}},{"source":"protocols/psp.ts","name":null,"original":{"line":56,"column":32},"generated":{"line":57,"column":28}},{"source":"protocols/psp.ts","name":null,"original":{"line":56,"column":33},"generated":{"line":57,"column":29}},{"source":"protocols/psp.ts","name":null,"original":{"line":56,"column":37},"generated":{"line":57,"column":33}},{"source":"protocols/psp.ts","name":null,"original":{"line":56,"column":38},"generated":{"line":57,"column":34}},{"source":"protocols/psp.ts","name":null,"original":{"line":56,"column":48},"generated":{"line":57,"column":44}},{"source":"protocols/psp.ts","name":null,"original":{"line":56,"column":49},"generated":{"line":57,"column":45}},{"source":"protocols/psp.ts","name":null,"original":{"line":56,"column":54},"generated":{"line":57,"column":50}},{"source":"protocols/psp.ts","name":null,"original":{"line":56,"column":56},"generated":{"line":57,"column":52}},{"source":"protocols/psp.ts","name":null,"original":{"line":56,"column":58},"generated":{"line":57,"column":54}},{"source":"protocols/psp.ts","name":null,"original":{"line":56,"column":63},"generated":{"line":57,"column":59}},{"source":"protocols/psp.ts","name":null,"original":{"line":56,"column":64},"generated":{"line":57,"column":60}},{"source":"protocols/psp.ts","name":null,"original":{"line":58,"column":4},"generated":{"line":58,"column":2}},{"source":"protocols/psp.ts","name":null,"original":{"line":59,"column":4},"generated":{"line":59,"column":2}},{"source":"protocols/psp.ts","name":null,"original":{"line":59,"column":10},"generated":{"line":59,"column":6}},{"source":"protocols/psp.ts","name":null,"original":{"line":59,"column":19},"generated":{"line":59,"column":15}},{"source":"protocols/psp.ts","name":null,"original":{"line":59,"column":22},"generated":{"line":59,"column":18}},{"source":"protocols/psp.ts","name":null,"original":{"line":59,"column":22},"generated":{"line":59,"column":24}},{"source":"protocols/psp.ts","name":null,"original":{"line":59,"column":22},"generated":{"line":59,"column":25}},{"source":"protocols/psp.ts","name":null,"original":{"line":59,"column":28},"generated":{"line":59,"column":31}},{"source":"protocols/psp.ts","name":null,"original":{"line":59,"column":29},"generated":{"line":59,"column":32}},{"source":"protocols/psp.ts","name":null,"original":{"line":59,"column":39},"generated":{"line":59,"column":42}},{"source":"protocols/psp.ts","name":null,"original":{"line":59,"column":40},"generated":{"line":59,"column":43}},{"source":"protocols/psp.ts","name":null,"original":{"line":59,"column":46},"generated":{"line":59,"column":49}},{"source":"protocols/psp.ts","name":null,"original":{"line":59,"column":47},"generated":{"line":59,"column":50}},{"source":"protocols/psp.ts","name":null,"original":{"line":59,"column":53},"generated":{"line":59,"column":56}},{"source":"protocols/psp.ts","name":null,"original":{"line":59,"column":54},"generated":{"line":59,"column":57}},{"source":"protocols/psp.ts","name":null,"original":{"line":60,"column":4},"generated":{"line":60,"column":2}},{"source":"protocols/psp.ts","name":null,"original":{"line":60,"column":10},"generated":{"line":60,"column":6}},{"source":"protocols/psp.ts","name":null,"original":{"line":60,"column":24},"generated":{"line":60,"column":20}},{"source":"protocols/psp.ts","name":null,"original":{"line":60,"column":27},"generated":{"line":60,"column":23}},{"source":"protocols/psp.ts","name":null,"original":{"line":60,"column":27},"generated":{"line":60,"column":29}},{"source":"protocols/psp.ts","name":null,"original":{"line":60,"column":27},"generated":{"line":60,"column":30}},{"source":"protocols/psp.ts","name":null,"original":{"line":60,"column":34},"generated":{"line":60,"column":37}},{"source":"protocols/psp.ts","name":null,"original":{"line":60,"column":35},"generated":{"line":60,"column":38}},{"source":"protocols/psp.ts","name":null,"original":{"line":60,"column":45},"generated":{"line":60,"column":48}},{"source":"protocols/psp.ts","name":null,"original":{"line":60,"column":46},"generated":{"line":60,"column":49}},{"source":"protocols/psp.ts","name":null,"original":{"line":60,"column":55},"generated":{"line":60,"column":58}},{"source":"protocols/psp.ts","name":null,"original":{"line":60,"column":56},"generated":{"line":60,"column":59}},{"source":"protocols/psp.ts","name":null,"original":{"line":61,"column":4},"generated":{"line":61,"column":2}},{"source":"protocols/psp.ts","name":null,"original":{"line":61,"column":8},"generated":{"line":61,"column":6}},{"source":"protocols/psp.ts","name":null,"original":{"line":62,"column":8},"generated":{"line":62,"column":4}},{"source":"protocols/psp.ts","name":null,"original":{"line":62,"column":14},"generated":{"line":62,"column":10}},{"source":"protocols/psp.ts","name":null,"original":{"line":62,"column":15},"generated":{"line":62,"column":11}},{"source":"protocols/psp.ts","name":null,"original":{"line":62,"column":23},"generated":{"line":62,"column":19}},{"source":"protocols/psp.ts","name":null,"original":{"line":62,"column":26},"generated":{"line":62,"column":22}},{"source":"protocols/psp.ts","name":null,"original":{"line":62,"column":26},"generated":{"line":62,"column":28}},{"source":"protocols/psp.ts","name":null,"original":{"line":62,"column":26},"generated":{"line":62,"column":29}},{"source":"protocols/psp.ts","name":null,"original":{"line":62,"column":29},"generated":{"line":62,"column":32}},{"source":"protocols/psp.ts","name":null,"original":{"line":62,"column":30},"generated":{"line":62,"column":33}},{"source":"protocols/psp.ts","name":null,"original":{"line":62,"column":36},"generated":{"line":62,"column":39}},{"source":"protocols/psp.ts","name":null,"original":{"line":63,"column":12},"generated":{"line":62,"column":40}},{"source":"protocols/psp.ts","name":null,"original":{"line":63,"column":25},"generated":{"line":62,"column":53}},{"source":"protocols/psp.ts","name":null,"original":{"line":64,"column":12},"generated":{"line":62,"column":55}},{"source":"protocols/psp.ts","name":null,"original":{"line":64,"column":18},"generated":{"line":62,"column":61}},{"source":"protocols/psp.ts","name":null,"original":{"line":64,"column":19},"generated":{"line":62,"column":62}},{"source":"protocols/psp.ts","name":null,"original":{"line":64,"column":28},"generated":{"line":62,"column":71}},{"source":"protocols/psp.ts","name":null,"original":{"line":65,"column":12},"generated":{"line":62,"column":73}},{"source":"protocols/psp.ts","name":null,"original":{"line":65,"column":26},"generated":{"line":62,"column":87}},{"source":"protocols/psp.ts","name":null,"original":{"line":66,"column":9},"generated":{"line":62,"column":88}},{"source":"protocols/psp.ts","name":null,"original":{"line":67,"column":5},"generated":{"line":63,"column":3}},{"source":"protocols/psp.ts","name":null,"original":{"line":67,"column":6},"generated":{"line":63,"column":4}},{"source":"protocols/psp.ts","name":null,"original":{"line":67,"column":13},"generated":{"line":63,"column":11}},{"source":"protocols/psp.ts","name":null,"original":{"line":67,"column":14},"generated":{"line":63,"column":12}},{"source":"protocols/psp.ts","name":null,"original":{"line":67,"column":16},"generated":{"line":63,"column":14}},{"source":"protocols/psp.ts","name":null,"original":{"line":68,"column":8},"generated":{"line":64,"column":4}},{"source":"protocols/psp.ts","name":null,"original":{"line":68,"column":14},"generated":{"line":64,"column":10}},{"source":"protocols/psp.ts","name":null,"original":{"line":68,"column":15},"generated":{"line":64,"column":11}},{"source":"protocols/psp.ts","name":null,"original":{"line":68,"column":23},"generated":{"line":64,"column":19}},{"source":"protocols/psp.ts","name":null,"original":{"line":68,"column":26},"generated":{"line":64,"column":22}},{"source":"protocols/psp.ts","name":null,"original":{"line":68,"column":31},"generated":{"line":64,"column":27}},{"source":"protocols/psp.ts","name":null,"original":{"line":71,"column":4},"generated":{"line":66,"column":2}},{"source":"protocols/psp.ts","name":null,"original":{"line":71,"column":11},"generated":{"line":66,"column":9}},{"source":"protocols/psp.ts","name":null,"original":{"line":71,"column":17},"generated":{"line":66,"column":15}},{"source":"protocols/psp.ts","name":null,"original":{"line":71,"column":18},"generated":{"line":66,"column":16}},{"source":"protocols/psp.ts","name":null,"original":{"line":71,"column":26},"generated":{"line":66,"column":24}},{"source":"protocols/psp.ts","name":null,"original":{"line":72,"column":0},"generated":{"line":67,"column":0}},{"source":"protocols/psp.ts","name":null,"original":{"line":72,"column":1},"generated":{"line":67,"column":1}},{"source":"protocols/psp.ts","name":null,"original":{"line":74,"column":0},"generated":{"line":68,"column":0}},{"source":"protocols/psp.ts","name":null,"original":{"line":74,"column":6},"generated":{"line":68,"column":4}},{"source":"protocols/psp.ts","name":null,"original":{"line":74,"column":13},"generated":{"line":68,"column":11}},{"source":"protocols/psp.ts","name":null,"original":{"line":74,"column":13},"generated":{"line":69,"column":2}},{"source":"protocols/psp.ts","name":null,"original":{"line":74,"column":16},"generated":{"line":69,"column":73}},{"source":"protocols/psp.ts","name":null,"original":{"line":74,"column":16},"generated":{"line":70,"column":4}},{"source":"protocols/psp.ts","name":null,"original":{"line":74,"column":16},"generated":{"line":71,"column":4}},{"source":"protocols/psp.ts","name":null,"original":{"line":74,"column":16},"generated":{"line":72,"column":6}},{"source":"protocols/psp.ts","name":null,"original":{"line":74,"column":16},"generated":{"line":73,"column":8}},{"source":"protocols/psp.ts","name":null,"original":{"line":74,"column":34},"generated":{"line":74,"column":10}},{"source":"protocols/psp.ts","name":null,"original":{"line":74,"column":41},"generated":{"line":74,"column":17}},{"source":"protocols/psp.ts","name":null,"original":{"line":74,"column":34},"generated":{"line":74,"column":25}},{"source":"protocols/psp.ts","name":null,"original":{"line":74,"column":41},"generated":{"line":74,"column":32}},{"source":"protocols/psp.ts","name":null,"original":{"line":74,"column":43},"generated":{"line":74,"column":34}},{"source":"protocols/psp.ts","name":null,"original":{"line":74,"column":47},"generated":{"line":74,"column":38}},{"source":"protocols/psp.ts","name":null,"original":{"line":74,"column":43},"generated":{"line":74,"column":46}},{"source":"protocols/psp.ts","name":null,"original":{"line":74,"column":47},"generated":{"line":74,"column":50}},{"source":"protocols/psp.ts","name":null,"original":{"line":74,"column":49},"generated":{"line":74,"column":52}},{"source":"protocols/psp.ts","name":null,"original":{"line":74,"column":53},"generated":{"line":74,"column":56}},{"source":"protocols/psp.ts","name":null,"original":{"line":74,"column":49},"generated":{"line":74,"column":64}},{"source":"protocols/psp.ts","name":null,"original":{"line":74,"column":53},"generated":{"line":74,"column":68}},{"source":"protocols/psp.ts","name":null,"original":{"line":74,"column":53},"generated":{"line":75,"column":10}},{"source":"protocols/psp.ts","name":null,"original":{"line":78,"column":8},"generated":{"line":75,"column":16}},{"source":"protocols/psp.ts","name":null,"original":{"line":78,"column":9},"generated":{"line":75,"column":17}},{"source":"protocols/psp.ts","name":null,"original":{"line":78,"column":13},"generated":{"line":75,"column":21}},{"source":"protocols/psp.ts","name":null,"original":{"line":78,"column":14},"generated":{"line":75,"column":22}},{"source":"protocols/psp.ts","name":null,"original":{"line":78,"column":20},"generated":{"line":75,"column":28}},{"source":"protocols/psp.ts","name":null,"original":{"line":79,"column":8},"generated":{"line":75,"column":32}},{"source":"protocols/psp.ts","name":null,"original":{"line":79,"column":12},"generated":{"line":75,"column":36}},{"source":"protocols/psp.ts","name":null,"original":{"line":79,"column":13},"generated":{"line":75,"column":37}},{"source":"protocols/psp.ts","name":null,"original":{"line":79,"column":14},"generated":{"line":75,"column":38}},{"source":"protocols/psp.ts","name":null,"original":{"line":79,"column":15},"generated":{"line":75,"column":39}},{"source":"protocols/psp.ts","name":null,"original":{"line":79,"column":16},"generated":{"line":75,"column":40}},{"source":"protocols/psp.ts","name":null,"original":{"line":79,"column":17},"generated":{"line":75,"column":41}},{"source":"protocols/psp.ts","name":null,"original":{"line":79,"column":22},"generated":{"line":75,"column":46}},{"source":"protocols/psp.ts","name":null,"original":{"line":79,"column":29},"generated":{"line":75,"column":53}},{"source":"protocols/psp.ts","name":null,"original":{"line":80,"column":8},"generated":{"line":75,"column":57}},{"source":"protocols/psp.ts","name":null,"original":{"line":80,"column":9},"generated":{"line":75,"column":58}},{"source":"protocols/psp.ts","name":null,"original":{"line":80,"column":13},"generated":{"line":75,"column":62}},{"source":"protocols/psp.ts","name":null,"original":{"line":80,"column":14},"generated":{"line":75,"column":63}},{"source":"protocols/psp.ts","name":null,"original":{"line":80,"column":15},"generated":{"line":75,"column":64}},{"source":"protocols/psp.ts","name":null,"original":{"line":80,"column":16},"generated":{"line":75,"column":65}},{"source":"protocols/psp.ts","name":null,"original":{"line":81,"column":8},"generated":{"line":75,"column":69}},{"source":"protocols/psp.ts","name":null,"original":{"line":81,"column":9},"generated":{"line":75,"column":70}},{"source":"protocols/psp.ts","name":null,"original":{"line":81,"column":13},"generated":{"line":75,"column":74}},{"source":"protocols/psp.ts","name":null,"original":{"line":81,"column":14},"generated":{"line":75,"column":75}},{"source":"protocols/psp.ts","name":null,"original":{"line":81,"column":15},"generated":{"line":75,"column":76}},{"source":"protocols/psp.ts","name":null,"original":{"line":81,"column":16},"generated":{"line":75,"column":77}},{"source":"protocols/psp.ts","name":null,"original":{"line":82,"column":8},"generated":{"line":75,"column":81}},{"source":"protocols/psp.ts","name":null,"original":{"line":82,"column":9},"generated":{"line":75,"column":82}},{"source":"protocols/psp.ts","name":null,"original":{"line":82,"column":13},"generated":{"line":75,"column":86}},{"source":"protocols/psp.ts","name":null,"original":{"line":82,"column":14},"generated":{"line":75,"column":87}},{"source":"protocols/psp.ts","name":null,"original":{"line":82,"column":15},"generated":{"line":75,"column":88}},{"source":"protocols/psp.ts","name":null,"original":{"line":82,"column":16},"generated":{"line":75,"column":89}},{"source":"protocols/psp.ts","name":null,"original":{"line":83,"column":8},"generated":{"line":75,"column":93}},{"source":"protocols/psp.ts","name":null,"original":{"line":83,"column":9},"generated":{"line":75,"column":94}},{"source":"protocols/psp.ts","name":null,"original":{"line":83,"column":13},"generated":{"line":75,"column":98}},{"source":"protocols/psp.ts","name":null,"original":{"line":83,"column":14},"generated":{"line":75,"column":99}},{"source":"protocols/psp.ts","name":null,"original":{"line":83,"column":15},"generated":{"line":75,"column":100}},{"source":"protocols/psp.ts","name":null,"original":{"line":83,"column":16},"generated":{"line":75,"column":101}},{"source":"protocols/psp.ts","name":null,"original":{"line":83,"column":17},"generated":{"line":75,"column":102}},{"source":"protocols/psp.ts","name":null,"original":{"line":83,"column":18},"generated":{"line":75,"column":103}},{"source":"protocols/psp.ts","name":null,"original":{"line":84,"column":8},"generated":{"line":75,"column":107}},{"source":"protocols/psp.ts","name":null,"original":{"line":84,"column":9},"generated":{"line":75,"column":108}},{"source":"protocols/psp.ts","name":null,"original":{"line":84,"column":13},"generated":{"line":75,"column":112}},{"source":"protocols/psp.ts","name":null,"original":{"line":84,"column":14},"generated":{"line":75,"column":113}},{"source":"protocols/psp.ts","name":null,"original":{"line":84,"column":15},"generated":{"line":75,"column":114}},{"source":"protocols/psp.ts","name":null,"original":{"line":84,"column":16},"generated":{"line":75,"column":115}},{"source":"protocols/psp.ts","name":null,"original":{"line":84,"column":17},"generated":{"line":75,"column":116}},{"source":"protocols/psp.ts","name":null,"original":{"line":84,"column":18},"generated":{"line":75,"column":117}},{"source":"protocols/psp.ts","name":null,"original":{"line":85,"column":8},"generated":{"line":75,"column":121}},{"source":"protocols/psp.ts","name":null,"original":{"line":85,"column":9},"generated":{"line":75,"column":122}},{"source":"protocols/psp.ts","name":null,"original":{"line":85,"column":13},"generated":{"line":75,"column":126}},{"source":"protocols/psp.ts","name":null,"original":{"line":85,"column":14},"generated":{"line":75,"column":127}},{"source":"protocols/psp.ts","name":null,"original":{"line":85,"column":15},"generated":{"line":75,"column":128}},{"source":"protocols/psp.ts","name":null,"original":{"line":85,"column":16},"generated":{"line":75,"column":129}},{"source":"protocols/psp.ts","name":null,"original":{"line":85,"column":17},"generated":{"line":75,"column":130}},{"source":"protocols/psp.ts","name":null,"original":{"line":85,"column":18},"generated":{"line":75,"column":131}},{"source":"protocols/psp.ts","name":null,"original":{"line":86,"column":8},"generated":{"line":75,"column":135}},{"source":"protocols/psp.ts","name":null,"original":{"line":86,"column":9},"generated":{"line":75,"column":136}},{"source":"protocols/psp.ts","name":null,"original":{"line":86,"column":13},"generated":{"line":75,"column":140}},{"source":"protocols/psp.ts","name":null,"original":{"line":86,"column":13},"generated":{"line":76,"column":12}},{"source":"protocols/psp.ts","name":null,"original":{"line":86,"column":13},"generated":{"line":77,"column":12}},{"source":"protocols/psp.ts","name":null,"original":{"line":86,"column":13},"generated":{"line":78,"column":10}},{"source":"protocols/psp.ts","name":null,"original":{"line":86,"column":13},"generated":{"line":79,"column":10}},{"source":"protocols/psp.ts","name":null,"original":{"line":88,"column":14},"generated":{"line":79,"column":16}},{"source":"protocols/psp.ts","name":null,"original":{"line":88,"column":18},"generated":{"line":79,"column":20}},{"source":"protocols/psp.ts","name":null,"original":{"line":88,"column":23},"generated":{"line":79,"column":25}},{"source":"protocols/psp.ts","name":null,"original":{"line":88,"column":68},"generated":{"line":79,"column":70}},{"source":"protocols/psp.ts","name":null,"original":{"line":88,"column":68},"generated":{"line":80,"column":8}},{"source":"protocols/psp.ts","name":null,"original":{"line":91,"column":10},"generated":{"line":81,"column":10}},{"source":"protocols/psp.ts","name":null,"original":{"line":91,"column":16},"generated":{"line":81,"column":16}},{"source":"protocols/psp.ts","name":null,"original":{"line":91,"column":19},"generated":{"line":81,"column":19}},{"source":"protocols/psp.ts","name":null,"original":{"line":92,"column":8},"generated":{"line":82,"column":12}},{"source":"protocols/psp.ts","name":null,"original":{"line":92,"column":17},"generated":{"line":82,"column":21}},{"source":"protocols/psp.ts","name":null,"original":{"line":92,"column":19},"generated":{"line":82,"column":23}},{"source":"protocols/psp.ts","name":null,"original":{"line":92,"column":23},"generated":{"line":82,"column":27}},{"source":"protocols/psp.ts","name":null,"original":{"line":92,"column":24},"generated":{"line":82,"column":28}},{"source":"protocols/psp.ts","name":null,"original":{"line":92,"column":25},"generated":{"line":82,"column":29}},{"source":"protocols/psp.ts","name":null,"original":{"line":92,"column":26},"generated":{"line":82,"column":30}},{"source":"protocols/psp.ts","name":null,"original":{"line":92,"column":27},"generated":{"line":82,"column":31}},{"source":"protocols/psp.ts","name":null,"original":{"line":92,"column":28},"generated":{"line":82,"column":32}},{"source":"protocols/psp.ts","name":null,"original":{"line":93,"column":8},"generated":{"line":83,"column":12}},{"source":"protocols/psp.ts","name":null,"original":{"line":93,"column":14},"generated":{"line":83,"column":18}},{"source":"protocols/psp.ts","name":null,"original":{"line":93,"column":16},"generated":{"line":83,"column":20}},{"source":"protocols/psp.ts","name":null,"original":{"line":93,"column":20},"generated":{"line":83,"column":24}},{"source":"protocols/psp.ts","name":null,"original":{"line":93,"column":21},"generated":{"line":83,"column":25}},{"source":"protocols/psp.ts","name":null,"original":{"line":93,"column":22},"generated":{"line":83,"column":26}},{"source":"protocols/psp.ts","name":null,"original":{"line":93,"column":23},"generated":{"line":83,"column":27}},{"source":"protocols/psp.ts","name":null,"original":{"line":93,"column":24},"generated":{"line":83,"column":28}},{"source":"protocols/psp.ts","name":null,"original":{"line":93,"column":25},"generated":{"line":83,"column":29}},{"source":"protocols/psp.ts","name":null,"original":{"line":94,"column":8},"generated":{"line":84,"column":12}},{"source":"protocols/psp.ts","name":null,"original":{"line":94,"column":15},"generated":{"line":84,"column":19}},{"source":"protocols/psp.ts","name":null,"original":{"line":94,"column":17},"generated":{"line":84,"column":21}},{"source":"protocols/psp.ts","name":null,"original":{"line":94,"column":21},"generated":{"line":84,"column":25}},{"source":"protocols/psp.ts","name":null,"original":{"line":94,"column":22},"generated":{"line":84,"column":26}},{"source":"protocols/psp.ts","name":null,"original":{"line":94,"column":23},"generated":{"line":84,"column":27}},{"source":"protocols/psp.ts","name":null,"original":{"line":94,"column":24},"generated":{"line":84,"column":28}},{"source":"protocols/psp.ts","name":null,"original":{"line":94,"column":25},"generated":{"line":84,"column":29}},{"source":"protocols/psp.ts","name":null,"original":{"line":94,"column":26},"generated":{"line":84,"column":30}},{"source":"protocols/psp.ts","name":null,"original":{"line":95,"column":8},"generated":{"line":85,"column":12}},{"source":"protocols/psp.ts","name":null,"original":{"line":95,"column":16},"generated":{"line":85,"column":20}},{"source":"protocols/psp.ts","name":null,"original":{"line":95,"column":18},"generated":{"line":85,"column":22}},{"source":"protocols/psp.ts","name":null,"original":{"line":96,"column":16},"generated":{"line":86,"column":11}},{"source":"protocols/psp.ts","name":null,"original":{"line":98,"column":4},"generated":{"line":86,"column":13}},{"source":"protocols/psp.ts","name":null,"original":{"line":99,"column":4},"generated":{"line":87,"column":10}},{"source":"protocols/psp.ts","name":null,"original":{"line":99,"column":21},"generated":{"line":87,"column":27}},{"source":"protocols/psp.ts","name":null,"original":{"line":99,"column":22},"generated":{"line":87,"column":28}},{"source":"protocols/psp.ts","name":null,"original":{"line":99,"column":28},"generated":{"line":87,"column":34}},{"source":"protocols/psp.ts","name":null,"original":{"line":99,"column":30},"generated":{"line":87,"column":36}},{"source":"protocols/psp.ts","name":null,"original":{"line":99,"column":34},"generated":{"line":87,"column":40}},{"source":"protocols/psp.ts","name":null,"original":{"line":99,"column":36},"generated":{"line":87,"column":42}},{"source":"protocols/psp.ts","name":null,"original":{"line":99,"column":40},"generated":{"line":87,"column":46}},{"source":"protocols/psp.ts","name":null,"original":{"line":99,"column":41},"generated":{"line":87,"column":47}},{"source":"protocols/psp.ts","name":null,"original":{"line":101,"column":4},"generated":{"line":88,"column":10}},{"source":"protocols/psp.ts","name":null,"original":{"line":101,"column":4},"generated":{"line":89,"column":10}},{"source":"protocols/psp.ts","name":null,"original":{"line":101,"column":4},"generated":{"line":90,"column":10}},{"source":"protocols/psp.ts","name":null,"original":{"line":102,"column":43},"generated":{"line":90,"column":17}},{"source":"protocols/psp.ts","name":null,"original":{"line":102,"column":43},"generated":{"line":90,"column":18}},{"source":"protocols/psp.ts","name":null,"original":{"line":102,"column":43},"generated":{"line":90,"column":19}},{"source":"protocols/psp.ts","name":null,"original":{"line":102,"column":43},"generated":{"line":90,"column":21}},{"source":"protocols/psp.ts","name":null,"original":{"line":102,"column":43},"generated":{"line":90,"column":30}},{"source":"protocols/psp.ts","name":null,"original":{"line":102,"column":43},"generated":{"line":90,"column":31}},{"source":"protocols/psp.ts","name":null,"original":{"line":102,"column":65},"generated":{"line":90,"column":53}},{"source":"protocols/psp.ts","name":null,"original":{"line":103,"column":8},"generated":{"line":90,"column":55}},{"source":"protocols/psp.ts","name":null,"original":{"line":103,"column":14},"generated":{"line":90,"column":61}},{"source":"protocols/psp.ts","name":null,"original":{"line":103,"column":15},"generated":{"line":90,"column":62}},{"source":"protocols/psp.ts","name":null,"original":{"line":103,"column":22},"generated":{"line":90,"column":69}},{"source":"protocols/psp.ts","name":null,"original":{"line":104,"column":8},"generated":{"line":90,"column":71}},{"source":"protocols/psp.ts","name":null,"original":{"line":104,"column":14},"generated":{"line":90,"column":77}},{"source":"protocols/psp.ts","name":null,"original":{"line":104,"column":15},"generated":{"line":90,"column":78}},{"source":"protocols/psp.ts","name":null,"original":{"line":104,"column":21},"generated":{"line":90,"column":84}},{"source":"protocols/psp.ts","name":null,"original":{"line":105,"column":5},"generated":{"line":90,"column":85}},{"source":"protocols/psp.ts","name":null,"original":{"line":105,"column":5},"generated":{"line":91,"column":8}},{"source":"protocols/psp.ts","name":null,"original":{"line":102,"column":10},"generated":{"line":92,"column":10}},{"source":"protocols/psp.ts","name":null,"original":{"line":102,"column":34},"generated":{"line":92,"column":34}},{"source":"protocols/psp.ts","name":null,"original":{"line":106,"column":4},"generated":{"line":93,"column":10}},{"source":"protocols/psp.ts","name":null,"original":{"line":106,"column":10},"generated":{"line":93,"column":16}},{"source":"protocols/psp.ts","name":null,"original":{"line":106,"column":11},"generated":{"line":93,"column":17}},{"source":"protocols/psp.ts","name":null,"original":{"line":106,"column":19},"generated":{"line":93,"column":25}},{"source":"protocols/psp.ts","name":null,"original":{"line":106,"column":22},"generated":{"line":93,"column":28}},{"source":"protocols/psp.ts","name":null,"original":{"line":106,"column":28},"generated":{"line":93,"column":34}},{"source":"protocols/psp.ts","name":null,"original":{"line":106,"column":29},"generated":{"line":93,"column":35}},{"source":"protocols/psp.ts","name":null,"original":{"line":106,"column":37},"generated":{"line":93,"column":43}},{"source":"protocols/psp.ts","name":null,"original":{"line":106,"column":41},"generated":{"line":93,"column":47}},{"source":"protocols/psp.ts","name":null,"original":{"line":106,"column":65},"generated":{"line":93,"column":71}},{"source":"protocols/psp.ts","name":null,"original":{"line":108,"column":4},"generated":{"line":94,"column":10}},{"source":"protocols/psp.ts","name":null,"original":{"line":108,"column":4},"generated":{"line":94,"column":11}},{"source":"protocols/psp.ts","name":null,"original":{"line":108,"column":4},"generated":{"line":94,"column":12}},{"source":"protocols/psp.ts","name":null,"original":{"line":108,"column":4},"generated":{"line":94,"column":14}},{"source":"protocols/psp.ts","name":null,"original":{"line":108,"column":4},"generated":{"line":94,"column":21}},{"source":"protocols/psp.ts","name":null,"original":{"line":108,"column":4},"generated":{"line":94,"column":22}},{"source":"protocols/psp.ts","name":null,"original":{"line":108,"column":20},"generated":{"line":94,"column":38}},{"source":"protocols/psp.ts","name":null,"original":{"line":108,"column":21},"generated":{"line":94,"column":40}},{"source":"protocols/psp.ts","name":null,"original":{"line":108,"column":28},"generated":{"line":94,"column":47}},{"source":"protocols/psp.ts","name":null,"original":{"line":108,"column":30},"generated":{"line":94,"column":49}},{"source":"protocols/psp.ts","name":null,"original":{"line":108,"column":35},"generated":{"line":94,"column":54}},{"source":"protocols/psp.ts","name":null,"original":{"line":108,"column":37},"generated":{"line":94,"column":56}},{"source":"protocols/psp.ts","name":null,"original":{"line":108,"column":43},"generated":{"line":94,"column":62}},{"source":"protocols/psp.ts","name":null,"original":{"line":108,"column":44},"generated":{"line":94,"column":63}},{"source":"protocols/psp.ts","name":null,"original":{"line":108,"column":44},"generated":{"line":95,"column":8}},{"source":"protocols/psp.ts","name":null,"original":{"line":108,"column":44},"generated":{"line":96,"column":8}},{"source":"protocols/psp.ts","name":null,"original":{"line":108,"column":44},"generated":{"line":97,"column":10}},{"source":"protocols/psp.ts","name":null,"original":{"line":108,"column":44},"generated":{"line":98,"column":6}},{"source":"protocols/psp.ts","name":null,"original":{"line":108,"column":44},"generated":{"line":99,"column":4}},{"source":"protocols/psp.ts","name":null,"original":{"line":108,"column":44},"generated":{"line":100,"column":2}},{"source":"protocols/psp.ts","name":null,"original":{"line":109,"column":1},"generated":{"line":100,"column":3}},{"source":"protocols/psp.ts","name":null,"original":{"line":109,"column":1},"generated":{"line":101,"column":2}},{"source":"protocols/psp.ts","name":null,"original":{"line":74,"column":6},"generated":{"line":101,"column":18}},{"source":"protocols/psp.ts","name":null,"original":{"line":74,"column":13},"generated":{"line":101,"column":25}},{"source":"protocols/psp.ts","name":null,"original":{"line":74,"column":13},"generated":{"line":102,"column":4}},{"source":"protocols/psp.ts","name":null,"original":{"line":74,"column":13},"generated":{"line":103,"column":2}},{"source":"protocols/psp.ts","name":null,"original":{"line":74,"column":13},"generated":{"line":104,"column":0}},{"source":"protocols/psp.ts","name":null,"original":{"line":109,"column":1},"generated":{"line":104,"column":3}},{"source":"protocols/psp.ts","name":null,"original":{"line":111,"column":13},"generated":{"line":105,"column":0}},{"source":"protocols/psp.ts","name":null,"original":{"line":111,"column":13},"generated":{"line":105,"column":7}},{"source":"protocols/psp.ts","name":null,"original":{"line":111,"column":13},"generated":{"line":105,"column":8}},{"source":"protocols/psp.ts","name":null,"original":{"line":111,"column":16},"generated":{"line":105,"column":11}},{"source":"protocols/psp.ts","name":null,"original":{"line":111,"column":19},"generated":{"line":105,"column":14}},{"source":"protocols/psp.ts","name":null,"original":{"line":112,"column":4},"generated":{"line":106,"column":2}},{"source":"protocols/psp.ts","name":null,"original":{"line":112,"column":8},"generated":{"line":106,"column":6}},{"source":"protocols/psp.ts","name":null,"original":{"line":112,"column":10},"generated":{"line":106,"column":8}},{"source":"protocols/psp.ts","name":null,"original":{"line":112,"column":15},"generated":{"line":106,"column":13}},{"source":"protocols/psp.ts","name":null,"original":{"line":113,"column":4},"generated":{"line":107,"column":2}},{"source":"protocols/psp.ts","name":null,"original":{"line":113,"column":11},"generated":{"line":107,"column":9}},{"source":"protocols/psp.ts","name":null,"original":{"line":113,"column":4},"generated":{"line":107,"column":11}},{"source":"protocols/psp.ts","name":null,"original":{"line":113,"column":11},"generated":{"line":107,"column":18}},{"source":"protocols/psp.ts","name":null,"original":{"line":114,"column":4},"generated":{"line":108,"column":2}},{"source":"protocols/psp.ts","name":null,"original":{"line":114,"column":15},"generated":{"line":108,"column":13}},{"source":"protocols/psp.ts","name":null,"original":{"line":114,"column":4},"generated":{"line":108,"column":15}},{"source":"protocols/psp.ts","name":null,"original":{"line":114,"column":15},"generated":{"line":108,"column":26}},{"source":"protocols/psp.ts","name":null,"original":{"line":115,"column":4},"generated":{"line":109,"column":2}},{"source":"protocols/psp.ts","name":null,"original":{"line":115,"column":11},"generated":{"line":109,"column":9}},{"source":"protocols/psp.ts","name":null,"original":{"line":115,"column":4},"generated":{"line":109,"column":11}},{"source":"protocols/psp.ts","name":null,"original":{"line":116,"column":1},"generated":{"line":110,"column":1}}],"sources":{"protocols/psp.ts":"import { Address, Bsm, PubKey, Script } from '@ts-bitcoin/core'\nimport { Cell, HandlerProps, Tape } from '../../types/common'\nimport { PSP as PSPType } from '../../types/protocols/psp'\nimport { verifyPaymailPublicKey } from '../paymail'\nimport { checkOpFalseOpReturn, saveProtocolData } from '../utils'\n\nconst address = '1signyCizp1VyBsJ5Ss2tEAgw7zCYNJu4'\n\nconst querySchema = [\n    { signature: 'string' },\n    { pubkey: 'string' },\n    { paymail: 'string' },\n]\n\nconst validateSignature = function (\n    pspObj: PSPType,\n    cell: Cell[],\n    tape: Tape[]\n) {\n    if (!Array.isArray(tape) || tape.length < 3) {\n        throw new Error('PSP requires at least 3 cells including the prefix')\n    }\n\n    let cellIndex = -1\n    tape.forEach((cc, index) => {\n        if (cc.cell === cell) {\n            cellIndex = index\n        }\n    })\n    if (cellIndex === -1) {\n        throw new Error('PSP could not find cell in tape')\n    }\n\n    const signatureBufferStatements = []\n    for (let i = 0; i < cellIndex; i++) {\n        const cellContainer = tape[i]\n        if (!checkOpFalseOpReturn(cellContainer)) {\n            cellContainer.cell.forEach((statement) => {\n                // add the value as hex\n                let value = statement.h\n                if (!value) {\n                    value = Buffer.from(\n                        statement.b as string,\n                        'base64'\n                    ).toString('hex')\n                }\n                if (!value) {\n                    value = Buffer.from(statement.s as string).toString('hex')\n                }\n                signatureBufferStatements.push(Buffer.from(value, 'hex'))\n            })\n            signatureBufferStatements.push(Buffer.from('7c', 'hex')) // | hex ????\n        }\n    }\n    const dataScript = Script.fromSafeDataArray(signatureBufferStatements)\n    const messageBuffer = Buffer.from(dataScript.toHex(), 'hex')\n\n    // verify psp signature\n    const publicKey = PubKey.fromString(pspObj.pubkey)\n    const signingAddress = Address.fromPubKey(publicKey)\n    try {\n        pspObj.verified = Bsm.verify(\n            messageBuffer,\n            pspObj.signature,\n            signingAddress\n        )\n    } catch (e) {\n        pspObj.verified = false\n    }\n\n    return pspObj.verified\n}\n\nconst handler = async function ({ dataObj, cell, tape }: HandlerProps) {\n    // Paymail Signature Protocol\n    // Validation\n    if (\n        !cell.length ||\n        cell[0].s !== address ||\n        !cell[1] ||\n        !cell[2] ||\n        !cell[3] ||\n        !cell[1].b ||\n        !cell[2].s ||\n        !cell[3].s ||\n        !tape\n    ) {\n        throw new Error(`Invalid Paymail Signature Protocol record`)\n    }\n\n    const pspObj = {\n        signature: cell[1].s,\n        pubkey: cell[2].s,\n        paymail: cell[3].s,\n        verified: false,\n    } as PSPType\n\n    // verify signature\n    validateSignature(pspObj, cell, tape)\n\n    // check the paymail public key\n    const paymailPublicKeyVerified = await verifyPaymailPublicKey(\n        pspObj.paymail,\n        pspObj.pubkey\n    )\n    pspObj.verified = pspObj.verified && paymailPublicKeyVerified\n\n    saveProtocolData(dataObj, 'PSP', pspObj)\n}\n\nexport const PSP = {\n    name: 'PSP',\n    address,\n    querySchema,\n    handler,\n}\n"},"lineCount":null}},"error":null,"hash":"97f0a08cfe5772b7eef313ab4b03007e","cacheData":{"env":{}}}